{"version":3,"file":"EventSetter.js","sources":["../src/EventSetter.js"],"sourcesContent":["import { logger } from './utils/Logger.js'\r\nimport { vars } from './_variables.js'\r\n\r\n// NOTE\r\n// This file sets up the events and the triggers them once the screen\r\n// size matches the variables set up in the Variables.json file\r\n\r\nconst under = new Event('under')\r\nconst xxs = new Event('xxs')\r\nconst xs = new Event('xs')\r\nconst sm = new Event('sm')\r\nconst md = new Event('md')\r\nconst lg = new Event('lg')\r\nconst xl = new Event('xl')\r\nconst xxl = new Event('xxl')\r\nconst over = new Event('over')\r\nconst portrait = new Event('portrait')\r\nconst landscape = new Event('landscape')\r\n\r\nlet orientation = null\r\nlet screen = null\r\nlet loaded = false\r\n\r\nfunction callScreen(event, title) {\r\n  if (screen === title) {\r\n    return\r\n  }\r\n\r\n  screen = title\r\n  if (!loaded) {\r\n    return\r\n  }\r\n\r\n  window.dispatchEvent(event)\r\n}\r\n\r\nfunction callOrient(event, title) {\r\n  if (orientation === title) {\r\n    return\r\n  }\r\n\r\n  orientation = title\r\n  if (!loaded) {\r\n    return\r\n  }\r\n\r\n  window.dispatchEvent(event)\r\n}\r\n\r\nfunction loadingCheck() {\r\n  if (loaded) {\r\n    return\r\n  }\r\n\r\n  loaded = true\r\n  screen = null\r\n  orientation = null\r\n  document.removeEventListener('DOMContentLoaded', setter.loadFlip)\r\n  setter.update()\r\n}\r\n\r\nclass Setter {\r\n  setup() {\r\n    logger.log('Event Setter Logic Online')\r\n    document.addEventListener('DOMContentLoaded', setter.loadFlip)\r\n    window.addEventListener('resize', this.update)\r\n    window.matchMedia('(orientation: portrait)').addEventListener('change', () => {\r\n      this.update()\r\n    })\r\n    this.update()\r\n  }\r\n\r\n  loadFlip() {\r\n    loadingCheck()\r\n  }\r\n\r\n  // eslint-disable-next-line complexity\r\n  update() {\r\n    // NOTE\r\n    // This is the final destination for all update calls in this framework\r\n    // and can be manually triggered to check whether of not the requisite flags\r\n    // should be triggered\r\n\r\n    const w = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\r\n    const h = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight\r\n\r\n    if (w > h) {\r\n      callOrient(landscape, 'landscape')\r\n    } else {\r\n      callOrient(portrait, 'portrait')\r\n    }\r\n\r\n    // NOTE\r\n    // This sets up a logic tree on whether or not it should act according to min-width\r\n    // or max-width to implement over or under logic accordingly as well as to perfectly\r\n    // match the breakpoints in the scss. By default the framework acts exactly as bootstrap\r\n    // but can be changed by matching the variable in the variables.json and the _variables.scss\r\n    // files to either min-width or max-width accordingly\r\n\r\n    // IMPORTANT\r\n    // the min-width and max-width variables must match between the min-width and max-width\r\n    // files for this framework to work\r\n\r\n    if (vars.minmax === 'max-width') {\r\n      switch (w) {\r\n        case w < vars.xxs: {\r\n          callScreen(xxs, 'xxs')\r\n          break\r\n        }\r\n\r\n        case w > vars.xxs && w <= vars.xs: {\r\n          callScreen(xs, 'xs')\r\n          break\r\n        }\r\n\r\n        case w > vars.xs && w <= vars.sm: {\r\n          callScreen(sm, 'sm')\r\n          break\r\n        }\r\n\r\n        case w > vars.sm && w <= vars.md: {\r\n          callScreen(md, 'md')\r\n          break\r\n        }\r\n\r\n        case w > vars.md && w <= vars.lg: {\r\n          callScreen(lg, 'lg')\r\n          break\r\n        }\r\n\r\n        case w > vars.lg && w <= vars.xl: {\r\n          callScreen(xl, 'xl')\r\n          break\r\n        }\r\n\r\n        case w > vars.xl && w <= vars.xxl: {\r\n          callScreen(xxl, 'xxl')\r\n          break\r\n        }\r\n\r\n        default: {\r\n          callScreen(over, 'over')\r\n        }\r\n      }\r\n\r\n    //   if (w <= vars.xxs) {\r\n    //     callScreen(xxs, 'xxs')\r\n    //   } else if (w > vars.xxs && w <= vars.xs) {\r\n    //     callScreen(xs, 'xs')\r\n    //   } else if (w > vars.xs && w <= vars.sm) {\r\n    //     callScreen(sm, 'sm')\r\n    //   } else if (w > vars.sm && w <= vars.md) {\r\n    //     callScreen(md, 'md')\r\n    //   } else if (w > vars.md && w <= vars.lg) {\r\n    //     callScreen(lg, 'lg')\r\n    //   } else if (w > vars.lg && w <= vars.xl) {\r\n    //     callScreen(xl, 'xl')\r\n    //   } else if (w > vars.xl && w <= vars.xxl) {\r\n    //     callScreen(xxl, 'xxl')\r\n    //   } else {\r\n    //     callScreen(over, 'over')\r\n    //   }\r\n    } else {\r\n      switch (w) {\r\n        case w < vars.xxs: {\r\n          callScreen(under, 'under')\r\n          break\r\n        }\r\n\r\n        case w > vars.xxs && w <= vars.xs: {\r\n          callScreen(xxs, 'xxs')\r\n          break\r\n        }\r\n\r\n        case w > vars.xs && w <= vars.sm: {\r\n          callScreen(xs, 'xs')\r\n          break\r\n        }\r\n\r\n        case w > vars.sm && w <= vars.md: {\r\n          callScreen(sm, 'sm')\r\n          break\r\n        }\r\n\r\n        case w > vars.md && w <= vars.lg: {\r\n          callScreen(md, 'md')\r\n          break\r\n        }\r\n\r\n        case w > vars.lg && w <= vars.xl: {\r\n          callScreen(lg, 'lg')\r\n          break\r\n        }\r\n\r\n        case w > vars.xl && w <= vars.xxl: {\r\n          callScreen(xl, 'xl')\r\n          break\r\n        }\r\n\r\n        default: {\r\n          callScreen(xxl, 'xxl')\r\n        }\r\n      }\r\n\r\n      // if (w < vars.xxs) {\r\n      //     callScreen(under, 'under')\r\n      // } else if (w >= vars.xxs && w < vars.xs) {\r\n      //     callScreen(xxs, 'xxs')\r\n      // } else if (w >= vars.xs && w < vars.sm) {\r\n      //     callScreen(xs, 'xs')\r\n      // } else if (w >= vars.sm && w < vars.md) {\r\n      //     callScreen(sm, 'sm')\r\n      // } else if (w >= vars.md && w < vars.lg) {\r\n      //     callScreen(md, 'md')\r\n      // } else if (w >= vars.lg && w < vars.xl) {\r\n      //     callScreen(lg, 'lg')\r\n      // } else if (w >= vars.xl && w < vars.xxl) {\r\n      //     callScreen(xl, 'xl')\r\n      // } else {\r\n      //     callScreen(xxl, 'xxl')\r\n      // }\r\n    }\r\n  }\r\n\r\n  // NOTE\r\n  // these functions are a fix to allow for the trigger to fire events by\r\n  // clearing the variables that don't allow for the events to fire\r\n  // before calling the update\r\n\r\n  clearAllThenUpdate() {\r\n    this.clearOrientThenUpdate()\r\n    this.clearScreenThenUpdate()\r\n  }\r\n\r\n  clearScreenThenUpdate() {\r\n    screen = null\r\n    orientation = null\r\n    this.update()\r\n  }\r\n\r\n  clearOrientThenUpdate() {\r\n    screen = null\r\n    orientation = null\r\n    this.update()\r\n  }\r\n\r\n  // NOTE\r\n  // These functions return the current state of the\r\n  // breakpoints and orientation as strings\r\n\r\n  returnOrientation() {\r\n    if (!orientation) {\r\n      this.update()\r\n    }\r\n\r\n    logger.log('The current orientation is ', orientation)\r\n    return orientation\r\n  }\r\n\r\n  returnScreen() {\r\n    if (!screen) {\r\n      this.update()\r\n    }\r\n\r\n    logger.log('The current screen is ', screen)\r\n    return screen\r\n  }\r\n}\r\n\r\nexport const setter = new Setter()\r\n"],"names":["under","Event","xxs","xs","sm","md","lg","xl","xxl","over","portrait","landscape","orientation","screen","loaded","callScreen","event","title","window","dispatchEvent","callOrient","loadingCheck","document","removeEventListener","setter","loadFlip","update","Setter","setup","logger","log","addEventListener","matchMedia","w","innerWidth","documentElement","clientWidth","body","h","innerHeight","clientHeight","vars","minmax","clearAllThenUpdate","clearOrientThenUpdate","clearScreenThenUpdate","returnOrientation","returnScreen"],"mappings":"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"}