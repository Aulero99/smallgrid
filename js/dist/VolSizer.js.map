{"version":3,"file":"VolSizer.js","sources":["../src/VolSizer.js"],"sourcesContent":["import { logger } from './utils/Logger.js'\r\nimport { vars } from './_variables.js'\r\n\r\n// NOTE\r\n// This is an independent file for setting the dynamic\r\n// size for the scss to tap in to for the cvh and cvw variables\r\n// and sets the foundation for the framework to work within\r\n\r\nlet dynamicWidth = null\r\nlet dynamicHeight = null\r\n\r\nclass VolSizer {\r\n  setup() {\r\n    logger.log('Sizer Logic Online')\r\n    window.addEventListener('resize', this.update)\r\n    window.matchMedia('(orientation: portrait)').addEventListener('change', () => {\r\n      this.update()\r\n    })\r\n  }\r\n\r\n  update() {\r\n    // logger.log('Updating CSS Size')\r\n    const w = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\r\n    const h = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight\r\n\r\n    // NOTE\r\n    // This check stops the update if the browser is mobile, the screen size is below\r\n    // the md breakpoint and if the width has not changed. This makes it so that\r\n    // a change to the viewport size, like navigation sliding on or off the screen\r\n    // will not cause the page to jump drastically. Solutions to completely eliminate jumps\r\n    // at higher scroll speeds are still being tested, but this works seamlessly on at least 80% of\r\n    // devices at low to md scroll speeds, with only the highest scroll speeds causing visual\r\n    // glitches at infrequent intervals and mostly on a scroll up action.\r\n\r\n    if (h < dynamicHeight && w === dynamicWidth && w <= vars.lg) {\r\n      return\r\n    }\r\n\r\n    dynamicWidth = w\r\n    dynamicHeight = h\r\n\r\n    const root = document.querySelector(':root')\r\n    const { prefix } = vars\r\n    // @ts-ignore\r\n    root.style.setProperty(`--${prefix}vh100`, `${h}px`)\r\n    // @ts-ignore\r\n    root.style.setProperty(`--${prefix}vw100`, `${w}px`)\r\n  }\r\n}\r\n\r\nexport const volSizer = new VolSizer()\r\n"],"names":["dynamicWidth","dynamicHeight","VolSizer","setup","logger","log","window","addEventListener","update","matchMedia","w","innerWidth","document","documentElement","clientWidth","body","h","innerHeight","clientHeight","vars","lg","root","querySelector","prefix","style","setProperty","volSizer"],"mappings":";;;;;;;;;;;EAGA;EACA;EACA;EACA;;EAEA,IAAIA,YAAY,GAAG,IAAI,CAAA;EACvB,IAAIC,aAAa,GAAG,IAAI,CAAA;EAExB,MAAMC,QAAQ,CAAC;EACbC,EAAAA,KAAKA,GAAG;EACNC,IAAAA,gBAAM,CAACC,GAAG,CAAC,oBAAoB,CAAC,CAAA;MAChCC,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAE,IAAI,CAACC,MAAM,CAAC,CAAA;MAC9CF,MAAM,CAACG,UAAU,CAAC,yBAAyB,CAAC,CAACF,gBAAgB,CAAC,QAAQ,EAAE,MAAM;QAC5E,IAAI,CAACC,MAAM,EAAE,CAAA;EACf,KAAC,CAAC,CAAA;EACJ,GAAA;EAEAA,EAAAA,MAAMA,GAAG;EACP;EACA,IAAA,MAAME,CAAC,GAAGJ,MAAM,CAACK,UAAU,IAAIC,QAAQ,CAACC,eAAe,CAACC,WAAW,IAAIF,QAAQ,CAACG,IAAI,CAACD,WAAW,CAAA;EAChG,IAAA,MAAME,CAAC,GAAGV,MAAM,CAACW,WAAW,IAAIL,QAAQ,CAACC,eAAe,CAACK,YAAY,IAAIN,QAAQ,CAACG,IAAI,CAACG,YAAY,CAAA;;EAEnG;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,IAAA,IAAIF,CAAC,GAAGf,aAAa,IAAIS,CAAC,KAAKV,YAAY,IAAIU,CAAC,IAAIS,kBAAI,CAACC,EAAE,EAAE;EAC3D,MAAA,OAAA;EACF,KAAA;EAEApB,IAAAA,YAAY,GAAGU,CAAC,CAAA;EAChBT,IAAAA,aAAa,GAAGe,CAAC,CAAA;EAEjB,IAAA,MAAMK,IAAI,GAAGT,QAAQ,CAACU,aAAa,CAAC,OAAO,CAAC,CAAA;MAC5C,MAAM;EAAEC,MAAAA,MAAAA;EAAO,KAAC,GAAGJ,kBAAI,CAAA;EACvB;EACAE,IAAAA,IAAI,CAACG,KAAK,CAACC,WAAW,CAAE,CAAA,EAAA,EAAIF,MAAO,CAAA,KAAA,CAAM,EAAG,CAAA,EAAEP,CAAE,CAAA,EAAA,CAAG,CAAC,CAAA;EACpD;EACAK,IAAAA,IAAI,CAACG,KAAK,CAACC,WAAW,CAAE,CAAA,EAAA,EAAIF,MAAO,CAAA,KAAA,CAAM,EAAG,CAAA,EAAEb,CAAE,CAAA,EAAA,CAAG,CAAC,CAAA;EACtD,GAAA;EACF,CAAA;QAEagB,QAAQ,GAAG,IAAIxB,QAAQ;;;;;;;;;;"}