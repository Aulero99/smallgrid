@use "sass:map";
@use 'sass:list';
@import "../var/_variables.scss";
@import "../var/_variable-maps.scss";
@import "./_units.scss";

// This file contains the logic for the base grid of Suspendors
// that includes all the .container, .row, .col and .vol
// and all derivatives of those classes (-bp-x) as well as
// classes strictly necessary to define spacing in the
// flexbox made with the grid


// STUB - Container
.container{
    display: block;
    width: 100%;
    max-width: 100vw;
    overflow-x: hidden;
    margin-left: auto;
    margin-right: auto;
}

@each $break, $screen in $breakpoint-map-ref{
    .container-#{$break}{ 
        @extend .container;
        max-width: map.get($container-solid-map, $break);
    }
}

.container-solid, .container-shift{
    --max-width: #{map.get($container-solid-map, 'xxl')};
    max-width: var(--max-width);
    display: block;
    width: 100%;
    overflow-x: hidden;
    margin-left: auto;
    margin-right: auto;
}

@each $break, $screen in reverse-breakpoints($breakpoint-map){
    .container-#{$break}-solid{
        --max-width: #{map.get($container-solid-map, $xxl)};
        max-width: var(--max-width);
        display: block;
        width: 100%;
        overflow-x: hidden;
        margin-left: auto;
        margin-right: auto;
    }
    .container-#{$break}-shift{
        max-width: 100%;
        display: block;
        width: 100%;
        overflow-x: hidden;
        margin-left: auto;
        margin-right: auto;
    }
    @media (min-width: $screen) {
        :root{
            --#{$prefix}container-shift-width: #{map.get($container-solid-map, $break)};
        }
        .container-#{$break}-solid{
            --max-width: #{map.get($container-solid-map, $break)};
        }
        .container-solid, .container-shift{
            --max-width: #{map.get($container-solid-map, $break)};
        }
        .container-#{$break}-shift{
            max-width: var(--#{$prefix}container-shift-width);
        }
    }
}

// STUB - Col

.col-fill{
    width: 0;
    flex-grow: 1;
}

// NOTE this class is used to remove compilation errors from extension, and
// reduces compilation size by about 7-12k
%col-extend{
    --width: 100%;
    width: var(--width);
}

.col{
    --width: 100%;
    @extend %col-extend;
}

@each $break, $screen in $breakpoint-map-ref{
    @each $name, $width in $col-map{
        .col-#{$break}-#{$name}{ 
            @extend %col-extend;
         }
    }
}

@each $name, $width in $col-map{
    .col-#{$name}, .cols-#{$name} .col{
        --width: #{$width};
        width: var(--width); 
    }
}

@each $break, $screen in $breakpoint-map-ref{
    @media screen and (#{$minmax}: $screen){
        @each $name, $width in $col-map{
            .col-#{$break}-#{$name}, .cols-#{$break}-#{$name} .col{ 
                --width: #{$width};
                width: var(--width); 
            }
        }
    }
}

// STUB - Row

.row{
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    &.flex-col{ flex-direction: column;}
}

// STUB - Vol

@each $key, $value in $vol-map { 
    .vol-#{$key} { 
        height: $value;
    }
}

// Breakpoint Logic
@each $break, $screen in $breakpoint-map-ref {
    @media (#{$minmax}: $screen){
        @each $k2, $v2 in $vol-map { 
            .vol-#{$break}-#{$k2} { 
                height: $v2;
            }
        }
    }
}