{"version":3,"names":["vars","spacer","minmax","prefix","xxs","xs","sm","md","lg","xl","xxl","dev","log","type","content","console","Date","toLocaleTimeString","logger","arguments","error","warn","assert","trace","under","Event","over","portrait","landscape","orientation","screen","loaded","callScreen","event","title","window","dispatchEvent","callOrient","setter","setup","document","addEventListener","loadFlip","this","update","matchMedia","removeEventListener","w","innerWidth","documentElement","clientWidth","body","innerHeight","clientHeight","clearAllThenUpdate","clearOrientThenUpdate","clearScreenThenUpdate","returnOrientation","returnScreen","dynamicWidth","dynamicHeight","volSizer","h","root","querySelector","style","setProperty","getStyle","name","select","getComputedStyle","getPropertyValue","returnNumbersOnly","string","output","s","Number","isNaN","options","importVariablesFromCss","Array","from","styleSheets","filter","sheet","href","startsWith","location","origin","reduce","acc","cssRules","def","rule","selectorText","element","key","slice","val","set","length","includes","fontSize","suspendors","constructor","triggerAll","triggerOrientation","triggerScreen","returnVariables","registrar","trigger","flag","runEvents","arr","e","setEventFlags","fn","push","Modal","data","static","scrollable","disableBodyScroll","centered","animation","transitionTime","targetModalId","targetModal","params","modalClosing","modalOpening","awaitEscKeyCloseModal","keyCode","closeModal","awaitOutClickCloseModal","Error","checkVisibility","rect","getBoundingClientRect","x","left","width","y","top","height","awaitOutTouchStartToCloseModal","changedTouches","clientX","clientY","scrollX","scrollY","awaitOutTouchEndToCloseModal","toggleScroll","toggle","scrollBarWidth","el","createElement","cssText","append","offsetWidth","remove","getScrollBarWidth","classList","add","paddingRight","toggleEventListenersToCloseModal","preventDefault","toggleOptionsAndAttributes","setAttribute","removeAttribute","toggleOnEventListenersToCloseModal","async","toggleOffEventListenersToCloseModal","modalStatus","modalTransitionTimer","close","timeOut","Promise","resolve","setTimeout","modal","id","getElementById","setModalValuesAndEnvironment","autofocus","prototype","forEach","call","querySelectorAll","firstChild","setFocus","display","showModal","openModal","open","forms","test","pop","loaders","loadAllImg","img","getAttribute","loadAllImgInId"],"sources":["../../js/src/_variables.js","../../js/src/Logger.js","../../js/src/EventSetter.js","../../js/src/VolSizer.js","../../js/src/Options.js","../../js/src/Suspendors.js","../../js/src/Registrar.js","../../js/src/models/Modal.js","../../js/src/Modals.js","../../js/src/Forms.js","../../js/src/Pop.js","../../js/src/Loaders.js","../../js/index.umd.js"],"sourcesContent":["export const vars = {\r\n  spacer: 0,\r\n  minmax: null,\r\n  prefix: null,\r\n  xxs: 0,\r\n  xs: 0,\r\n  sm: 0,\r\n  md: 0,\r\n  lg: 0,\r\n  xl: 0,\r\n  xxl: 0,\r\n  dev: false,\r\n  'modal-transition-time': null\r\n}\r\n","/* eslint-disable prefer-rest-params */\r\nimport { vars } from './_variables.js'\r\n\r\nfunction log(type, content) {\r\n  if (vars.dev) {\r\n    // eslint-disable-next-line no-console\r\n    console[type](`[${type}] :: ${new Date().toLocaleTimeString()} :: `, ...content)\r\n  } else {\r\n    // eslint-disable-next-line default-case\r\n    switch (type) {\r\n      case 'log':\r\n      case 'assert': {\r\n        return\r\n      }\r\n    }\r\n\r\n    // eslint-disable-next-line no-warning-comments\r\n    // TODO SEND LOGS TO EXTERNAL SERVICE\r\n    // eslint-disable-next-line no-console\r\n    console[type](`[${type}] :: ${new Date().toLocaleTimeString()} :: `, ...content)\r\n  }\r\n}\r\n\r\nexport const logger = {\r\n  log() {\r\n    log('log', arguments)\r\n  },\r\n  error() {\r\n    log('error', arguments)\r\n  },\r\n  warn() {\r\n    log('warn', arguments)\r\n  },\r\n  assert() {\r\n    log('assert', arguments)\r\n  },\r\n  trace() {\r\n    log('trace', arguments)\r\n  }\r\n}\r\n","import { logger } from './Logger.js'\r\nimport { vars } from './_variables.js'\r\n\r\n// NOTE\r\n// This file sets up the events and the triggers them once the screen\r\n// size matches the variables set up in the Variables.json file\r\n\r\nconst under = new Event('under')\r\nconst xxs = new Event('xxs')\r\nconst xs = new Event('xs')\r\nconst sm = new Event('sm')\r\nconst md = new Event('md')\r\nconst lg = new Event('lg')\r\nconst xl = new Event('xl')\r\nconst xxl = new Event('xxl')\r\nconst over = new Event('over')\r\nconst portrait = new Event('portrait')\r\nconst landscape = new Event('landscape')\r\n\r\nlet orientation = null\r\nlet screen = null\r\nlet loaded = false\r\n\r\nfunction callScreen(event, title) {\r\n  if (screen === title) {\r\n    return\r\n  }\r\n\r\n  screen = title\r\n  if (!loaded) {\r\n    return\r\n  }\r\n\r\n  window.dispatchEvent(event)\r\n}\r\n\r\nfunction callOrient(event, title) {\r\n  if (orientation === title) {\r\n    return\r\n  }\r\n\r\n  orientation = title\r\n  if (!loaded) {\r\n    return\r\n  }\r\n\r\n  window.dispatchEvent(event)\r\n}\r\n\r\nfunction loadingCheck() {\r\n  if (loaded) {\r\n    return\r\n  }\r\n\r\n  loaded = true\r\n  screen = null\r\n  orientation = null\r\n  document.removeEventListener('DOMContentLoaded', setter.loadFlip)\r\n  setter.update()\r\n}\r\n\r\nclass Setter {\r\n  setup() {\r\n    logger.log('Event Setter Logic Online')\r\n    document.addEventListener('DOMContentLoaded', setter.loadFlip)\r\n    window.addEventListener('resize', this.update)\r\n    window.matchMedia('(orientation: portrait)').addEventListener('change', () => {\r\n      this.update()\r\n    })\r\n    this.update()\r\n  }\r\n\r\n  loadFlip() {\r\n    loadingCheck()\r\n  }\r\n\r\n  // eslint-disable-next-line complexity\r\n  update() {\r\n    // NOTE\r\n    // This is the final destination for all update calls in this framework\r\n    // and can be manually triggered to check whether of not the requisite flags\r\n    // should be triggered\r\n\r\n    const w = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\r\n    const h = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight\r\n\r\n    if (w > h) {\r\n      callOrient(landscape, 'landscape')\r\n    } else {\r\n      callOrient(portrait, 'portrait')\r\n    }\r\n\r\n    // NOTE\r\n    // This sets up a logic tree on whether or not it should act according to min-width\r\n    // or max-width to implement over or under logic accordingly as well as to perfectly\r\n    // match the breakpoints in the scss. By default the framework acts exactly as bootstrap\r\n    // but can be changed by matching the variable in the variables.json and the _variables.scss\r\n    // files to either min-width or max-width accordingly\r\n\r\n    // IMPORTANT\r\n    // the min-width and max-width variables must match between the min-width and max-width\r\n    // files for this framework to work\r\n\r\n    if (vars.minmax === 'max-width') {\r\n      switch (w) {\r\n        case w < vars.xxs: {\r\n          callScreen(xxs, 'xxs')\r\n          break\r\n        }\r\n\r\n        case w > vars.xxs && w <= vars.xs: {\r\n          callScreen(xs, 'xs')\r\n          break\r\n        }\r\n\r\n        case w > vars.xs && w <= vars.sm: {\r\n          callScreen(sm, 'sm')\r\n          break\r\n        }\r\n\r\n        case w > vars.sm && w <= vars.md: {\r\n          callScreen(md, 'md')\r\n          break\r\n        }\r\n\r\n        case w > vars.md && w <= vars.lg: {\r\n          callScreen(lg, 'lg')\r\n          break\r\n        }\r\n\r\n        case w > vars.lg && w <= vars.xl: {\r\n          callScreen(xl, 'xl')\r\n          break\r\n        }\r\n\r\n        case w > vars.xl && w <= vars.xxl: {\r\n          callScreen(xxl, 'xxl')\r\n          break\r\n        }\r\n\r\n        default: {\r\n          callScreen(over, 'over')\r\n        }\r\n      }\r\n\r\n    //   if (w <= vars.xxs) {\r\n    //     callScreen(xxs, 'xxs')\r\n    //   } else if (w > vars.xxs && w <= vars.xs) {\r\n    //     callScreen(xs, 'xs')\r\n    //   } else if (w > vars.xs && w <= vars.sm) {\r\n    //     callScreen(sm, 'sm')\r\n    //   } else if (w > vars.sm && w <= vars.md) {\r\n    //     callScreen(md, 'md')\r\n    //   } else if (w > vars.md && w <= vars.lg) {\r\n    //     callScreen(lg, 'lg')\r\n    //   } else if (w > vars.lg && w <= vars.xl) {\r\n    //     callScreen(xl, 'xl')\r\n    //   } else if (w > vars.xl && w <= vars.xxl) {\r\n    //     callScreen(xxl, 'xxl')\r\n    //   } else {\r\n    //     callScreen(over, 'over')\r\n    //   }\r\n    } else {\r\n      switch (w) {\r\n        case w < vars.xxs: {\r\n          callScreen(under, 'under')\r\n          break\r\n        }\r\n\r\n        case w > vars.xxs && w <= vars.xs: {\r\n          callScreen(xxs, 'xxs')\r\n          break\r\n        }\r\n\r\n        case w > vars.xs && w <= vars.sm: {\r\n          callScreen(xs, 'xs')\r\n          break\r\n        }\r\n\r\n        case w > vars.sm && w <= vars.md: {\r\n          callScreen(sm, 'sm')\r\n          break\r\n        }\r\n\r\n        case w > vars.md && w <= vars.lg: {\r\n          callScreen(md, 'md')\r\n          break\r\n        }\r\n\r\n        case w > vars.lg && w <= vars.xl: {\r\n          callScreen(lg, 'lg')\r\n          break\r\n        }\r\n\r\n        case w > vars.xl && w <= vars.xxl: {\r\n          callScreen(xl, 'xl')\r\n          break\r\n        }\r\n\r\n        default: {\r\n          callScreen(xxl, 'xxl')\r\n        }\r\n      }\r\n\r\n      // if (w < vars.xxs) {\r\n      //     callScreen(under, 'under')\r\n      // } else if (w >= vars.xxs && w < vars.xs) {\r\n      //     callScreen(xxs, 'xxs')\r\n      // } else if (w >= vars.xs && w < vars.sm) {\r\n      //     callScreen(xs, 'xs')\r\n      // } else if (w >= vars.sm && w < vars.md) {\r\n      //     callScreen(sm, 'sm')\r\n      // } else if (w >= vars.md && w < vars.lg) {\r\n      //     callScreen(md, 'md')\r\n      // } else if (w >= vars.lg && w < vars.xl) {\r\n      //     callScreen(lg, 'lg')\r\n      // } else if (w >= vars.xl && w < vars.xxl) {\r\n      //     callScreen(xl, 'xl')\r\n      // } else {\r\n      //     callScreen(xxl, 'xxl')\r\n      // }\r\n    }\r\n  }\r\n\r\n  // NOTE\r\n  // these functions are a fix to allow for the trigger to fire events by\r\n  // clearing the variables that don't allow for the events to fire\r\n  // before calling the update\r\n\r\n  clearAllThenUpdate() {\r\n    this.clearOrientThenUpdate()\r\n    this.clearScreenThenUpdate()\r\n  }\r\n\r\n  clearScreenThenUpdate() {\r\n    screen = null\r\n    orientation = null\r\n    this.update()\r\n  }\r\n\r\n  clearOrientThenUpdate() {\r\n    screen = null\r\n    orientation = null\r\n    this.update()\r\n  }\r\n\r\n  // NOTE\r\n  // These functions return the current state of the\r\n  // breakpoints and orientation as strings\r\n\r\n  returnOrientation() {\r\n    if (!orientation) {\r\n      this.update()\r\n    }\r\n\r\n    logger.log('The current orientation is ', orientation)\r\n    return orientation\r\n  }\r\n\r\n  returnScreen() {\r\n    if (!screen) {\r\n      this.update()\r\n    }\r\n\r\n    logger.log('The current screen is ', screen)\r\n    return screen\r\n  }\r\n}\r\n\r\nexport const setter = new Setter()\r\n","import { logger } from './Logger.js'\r\nimport { vars } from './_variables.js'\r\n\r\n// NOTE\r\n// This is an independent file for setting the dynamic\r\n// size for the scss to tap in to for the cvh and cvw variables\r\n// and sets the foundation for the framework to work within\r\n\r\nlet dynamicWidth = null\r\nlet dynamicHeight = null\r\n\r\nclass VolSizer {\r\n  setup() {\r\n    logger.log('Sizer Logic Online')\r\n    window.addEventListener('resize', this.update)\r\n    window.matchMedia('(orientation: portrait)').addEventListener('change', () => {\r\n      this.update()\r\n    })\r\n  }\r\n\r\n  update() {\r\n    // logger.log('Updating CSS Size')\r\n    const w = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\r\n    const h = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight\r\n\r\n    // NOTE\r\n    // This check stops the update if the browser is mobile, the screen size is below\r\n    // the md breakpoint and if the width has not changed. This makes it so that\r\n    // a change to the viewport size, like navigation sliding on or off the screen\r\n    // will not cause the page to jump drastically. Solutions to completely eliminate jumps\r\n    // at higher scroll speeds are still being tested, but this works seamlessly on at least 80% of\r\n    // devices at low to md scroll speeds, with only the highest scroll speeds causing visual\r\n    // glitches at infrequent intervals and mostly on a scroll up action.\r\n\r\n    if (h < dynamicHeight && w === dynamicWidth && w <= vars.lg) {\r\n      return\r\n    }\r\n\r\n    dynamicWidth = w\r\n    dynamicHeight = h\r\n\r\n    const root = document.querySelector(':root')\r\n    const { prefix } = vars\r\n    // @ts-ignore\r\n    root.style.setProperty(`--${prefix}vh100`, `${h}px`)\r\n    // @ts-ignore\r\n    root.style.setProperty(`--${prefix}vw100`, `${w}px`)\r\n  }\r\n}\r\n\r\nexport const volSizer = new VolSizer()\r\n","/* eslint-disable no-return-assign */\r\n/* eslint-disable unicorn/no-array-reduce */\r\nimport { logger } from './Logger.js'\r\nimport { vars } from './_variables.js'\r\n\r\nconst root = document.querySelector(':root')\r\n\r\nfunction getStyle(name) {\r\n  const select = (root !== undefined && root !== null) ? getComputedStyle(root) : null\r\n  if (select !== null) {\r\n    return select.getPropertyValue(name)\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nfunction returnNumbersOnly(string) {\r\n  let output = ''\r\n  for (const s of string) {\r\n    if (!Number.isNaN(s) || s === '.') {\r\n      output += s\r\n    } else {\r\n      break\r\n    }\r\n  }\r\n\r\n  return Number(output)\r\n}\r\n\r\nfunction getCssRoot() {\r\n  const cssVars = Array.from(document.styleSheets)\r\n    .filter(\r\n      sheet =>\r\n        sheet.href === null || sheet.href.startsWith(window.location.origin)\r\n    )\r\n    .reduce(\r\n      (acc, sheet) =>\r\n        (acc = [\r\n          ...acc,\r\n          ...Array.from(sheet.cssRules).reduce(\r\n            (def, rule) =>\r\n              (def =\r\n                rule.selectorText === ':root' ?\r\n                  [\r\n                    ...def,\r\n                    ...Array.from(rule.style).filter(name =>\r\n                      name.startsWith('--')\r\n                    )\r\n                  ] :\r\n                  def),\r\n            []\r\n          )\r\n        ]),\r\n      []\r\n    )\r\n  return cssVars\r\n}\r\n\r\nclass Options {\r\n  importVariablesFromCss() {\r\n    const root = getCssRoot()\r\n    logger.log('the found root is: ', root)\r\n\r\n    const prefix = getStyle('--prefix')\r\n    vars.prefix = prefix\r\n\r\n    for (const element of root) {\r\n      const key = element.slice(2)\r\n      const val = getStyle(element)\r\n      let set = null\r\n\r\n      // skip if value is nulled or key is too long\r\n      if (val.length === 0 || key.length > 30) {\r\n        continue\r\n      }\r\n\r\n      // skip the prefix\r\n      if (key === 'prefix') {\r\n        continue\r\n      }\r\n\r\n      // skip the vh100 and vw100 values, which we only need to set not get\r\n      if (key === `${prefix}vh100` || key === `${prefix}vw100`) {\r\n        continue\r\n      }\r\n\r\n      // skip the spacer, set that later\r\n      if (key === `${prefix}spacer`) {\r\n        continue\r\n      }\r\n\r\n      // skip if prefix is not detected, for the rest of the rooted variables\r\n      if (!key.includes(prefix)) {\r\n        continue\r\n      }\r\n\r\n      // set the value to a number if first digit is a number, otherwise set it as a string\r\n      set = Number.isNaN(val[0]) ? val : returnNumbersOnly(val)\r\n\r\n      vars[`${key.slice(prefix.length)}`] = set\r\n    }\r\n\r\n    // set the spacer as a result of the rem times the base px value of the font size\r\n    const spacer = returnNumbersOnly(getStyle(`--${prefix}spacer`)) * returnNumbersOnly(window.getComputedStyle(document.body).fontSize)\r\n    vars.spacer = spacer\r\n\r\n    logger.log('The vars are now: ', vars)\r\n    document.removeEventListener('DOMContentLoaded', options.importVariablesFromCss)\r\n  }\r\n\r\n  dev() {\r\n    vars.dev = true\r\n    logger.log('set dev mode to true')\r\n  }\r\n}\r\nexport const options = new Options()\r\ndocument.addEventListener('DOMContentLoaded', options.importVariablesFromCss)\r\n","import { setter } from './EventSetter.js'\r\nimport { volSizer } from './VolSizer.js'\r\nimport { logger } from './Logger.js'\r\nimport { vars } from './_variables.js'\r\nimport { options } from './Options.js'\r\n\r\nclass Suspendors {\r\n  constructor() {\r\n    logger.log('Suspendors Online')\r\n\r\n    volSizer.setup()\r\n    setter.setup()\r\n  }\r\n\r\n  // NOTE\r\n  // These are functions that will allow for\r\n  // manual triggers of the current breakpoint\r\n  // or orientation that will remain consistent\r\n  // with all listeners and registered\r\n  // functions\r\n\r\n  triggerAll() {\r\n    setter.clearAllThenUpdate()\r\n  }\r\n\r\n  triggerOrientation() {\r\n    setter.clearOrientThenUpdate()\r\n  }\r\n\r\n  triggerScreen() {\r\n    setter.clearScreenThenUpdate()\r\n  }\r\n\r\n  // NOTE\r\n  // These functions return the values of the\r\n  // state of the breakpoints and the\r\n  // orientation values\r\n\r\n  returnScreen() {\r\n    return setter.returnScreen()\r\n  }\r\n\r\n  returnOrientation() {\r\n    return setter.returnOrientation()\r\n  }\r\n\r\n  returnVariables() {\r\n    return vars\r\n  }\r\n\r\n  dev() {\r\n    options.dev()\r\n  }\r\n}\r\n\r\nexport const suspendors = new Suspendors()\r\n","import { logger } from './Logger.js'\r\n\r\nconst under = []\r\nconst xxs = []\r\nconst xs = []\r\nconst sm = []\r\nconst md = []\r\nconst lg = []\r\nconst xl = []\r\nconst xxl = []\r\nconst over = []\r\nconst landscape = []\r\nconst portrait = []\r\n\r\nclass Registrar {\r\n  constructor() {\r\n    logger.log('Registrar Online')\r\n    window.addEventListener('under', () => {\r\n      this.trigger('under')\r\n    }, false)\r\n    window.addEventListener('xxs', () => {\r\n      this.trigger('xxs')\r\n    }, false)\r\n    window.addEventListener('xs', () => {\r\n      this.trigger('xs')\r\n    }, false)\r\n    window.addEventListener('sm', () => {\r\n      this.trigger('sm')\r\n    }, false)\r\n    window.addEventListener('md', () => {\r\n      this.trigger('md')\r\n    }, false)\r\n    window.addEventListener('lg', () => {\r\n      this.trigger('lg')\r\n    }, false)\r\n    window.addEventListener('xl', () => {\r\n      this.trigger('xl')\r\n    }, false)\r\n    window.addEventListener('xxl', () => {\r\n      this.trigger('xxl')\r\n    }, false)\r\n    window.addEventListener('over', () => {\r\n      this.trigger('over')\r\n    }, false)\r\n    window.addEventListener('portrait', () => {\r\n      this.trigger('portrait')\r\n    }, false)\r\n    window.addEventListener('landscape', () => {\r\n      this.trigger('landscape')\r\n    }, false)\r\n  }\r\n\r\n  trigger(flag) {\r\n    logger.log(`Triggering ${flag}`)\r\n    if (flag === 'under') {\r\n      this.runEvents(under)\r\n      return\r\n    }\r\n\r\n    if (flag === 'sm') {\r\n      this.runEvents(sm)\r\n      return\r\n    }\r\n\r\n    if (flag === 'md') {\r\n      this.runEvents(md)\r\n      return\r\n    }\r\n\r\n    if (flag === 'lg') {\r\n      this.runEvents(lg)\r\n      return\r\n    }\r\n\r\n    if (flag === 'xl') {\r\n      this.runEvents(xl)\r\n      return\r\n    }\r\n\r\n    if (flag === 'xxl') {\r\n      this.runEvents(xxl)\r\n      return\r\n    }\r\n\r\n    if (flag === 'over') {\r\n      this.runEvents(over)\r\n      return\r\n    }\r\n\r\n    if (flag === 'landscape') {\r\n      this.runEvents(landscape)\r\n      return\r\n    }\r\n\r\n    if (flag === 'portrait') {\r\n      this.runEvents(portrait)\r\n    }\r\n  }\r\n\r\n  runEvents(arr) {\r\n    if (arr.length < 1) {\r\n      return\r\n    }\r\n\r\n    for (const e of arr) {\r\n      if (typeof e === 'function') {\r\n        e()\r\n      }\r\n    }\r\n  }\r\n\r\n  setEventFlags(fn, flag) {\r\n    if (typeof fn === 'function') {\r\n      logger.log('valid function')\r\n      if (flag === 'under') {\r\n        under.push(fn)\r\n        return\r\n      }\r\n\r\n      if (flag === 'xxs') {\r\n        xxs.push(fn)\r\n        return\r\n      }\r\n\r\n      if (flag === 'xs') {\r\n        xs.push(fn)\r\n        return\r\n      }\r\n\r\n      if (flag === 'sm') {\r\n        sm.push(fn)\r\n        return\r\n      }\r\n\r\n      if (flag === 'md') {\r\n        md.push(fn)\r\n        return\r\n      }\r\n\r\n      if (flag === 'lg') {\r\n        lg.push(fn)\r\n        return\r\n      }\r\n\r\n      if (flag === 'xl') {\r\n        xl.push(fn)\r\n        return\r\n      }\r\n\r\n      if (flag === 'xxl') {\r\n        xxl.push(fn)\r\n        return\r\n      }\r\n\r\n      if (flag === 'over') {\r\n        over.push(fn)\r\n        return\r\n      }\r\n\r\n      if (flag === 'landscape') {\r\n        landscape.push(fn)\r\n        return\r\n      }\r\n\r\n      if (flag === 'portrait') {\r\n        portrait.push(fn)\r\n      }\r\n    } else {\r\n      logger.log('not a valid function')\r\n    }\r\n  }\r\n\r\n  under(fn) {\r\n    logger.log('registering function: ', fn, ' at breakpoint under')\r\n    this.setEventFlags(fn, 'under')\r\n  }\r\n\r\n  xxs(fn) {\r\n    logger.log('registering function: ', fn, ' at breakpoint sm')\r\n    this.setEventFlags(fn, 'xxs')\r\n  }\r\n\r\n  xs(fn) {\r\n    logger.log('registering function: ', fn, ' at breakpoint sm')\r\n    this.setEventFlags(fn, 'xs')\r\n  }\r\n\r\n  sm(fn) {\r\n    logger.log('registering function: ', fn, ' at breakpoint sm')\r\n    this.setEventFlags(fn, 'sm')\r\n  }\r\n\r\n  md(fn) {\r\n    logger.log('registering function: ', fn, ' at breakpoint md')\r\n    this.setEventFlags(fn, 'md')\r\n  }\r\n\r\n  lg(fn) {\r\n    logger.log('registering function: ', fn, ' at breakpoint lg')\r\n    this.setEventFlags(fn, 'lg')\r\n  }\r\n\r\n  xl(fn) {\r\n    logger.log('registering function: ', fn, ' at breakpoint xl')\r\n    this.setEventFlags(fn, 'xl')\r\n  }\r\n\r\n  xxl(fn) {\r\n    logger.log('registering function: ', fn, ' at breakpoint xxl')\r\n    this.setEventFlags(fn, 'xxl')\r\n  }\r\n\r\n  over(fn) {\r\n    logger.log('registering function: ', fn, ' at breakpoint over')\r\n    this.setEventFlags(fn, 'over')\r\n  }\r\n\r\n  landscape(fn) {\r\n    logger.log('registering function: ', fn, ' at orientation landscape')\r\n    this.setEventFlags(fn, 'landscape')\r\n  }\r\n\r\n  portrait(fn) {\r\n    logger.log('registering function: ', fn, ' at orientation portrait')\r\n    this.setEventFlags(fn, 'portrait')\r\n  }\r\n}\r\nexport const registrar = new Registrar()\r\n","import { vars } from '../_variables.js'\r\n\r\nexport class Modal {\r\n  constructor(data) {\r\n    this.static = data.static || false\r\n    this.scrollable = data.scrollable || false\r\n    this.disableBodyScroll = data.disableBodyScroll || true\r\n    this.centered = data.centered || false\r\n    this.animation = data.animation || true\r\n    this.transitionTime = data.transitionTime || vars['modal-transition-time'] ? vars['modal-transition-time'] : 1\r\n  }\r\n}\r\n","import { logger } from './Logger.js'\r\nimport { Modal } from './models/Modal.js'\r\n\r\nlet targetModalId = null\r\nlet targetModal = null\r\nlet params = {}\r\nlet modalClosing = false\r\nlet modalOpening = false\r\n\r\nfunction setFocus() {\r\n  if (!targetModalId || !targetModal) {\r\n    throw new Error('no modal target setFocus()')\r\n  }\r\n\r\n  // Check to see if an element has the autofocus attribute applied,\r\n  // and if not apply it to the first child of the element.\r\n  let autofocus = 0\r\n  Array.prototype.forEach.call(targetModal.querySelectorAll('[autofocus]'), () => {\r\n    autofocus++\r\n  })\r\n  if (autofocus === 0) {\r\n    logger.log('no autofocus target provided, setting first child to autofocus.')\r\n    targetModal.firstChild.setAttribute('autofocus', '')\r\n  }\r\n}\r\n\r\nfunction awaitEscKeyCloseModal(e) {\r\n  // listen for the user to press escape key, then fire the code\r\n  // to close the modal\r\n  if (e.key === 'Escape' || e.keyCode === 27) {\r\n    logger.log('escape pressed')\r\n    closeModal()\r\n  }\r\n}\r\n\r\nfunction awaitOutClickCloseModal(e) {\r\n  if (!targetModalId || !targetModal) {\r\n    throw new Error('no modal target awaitOutClickCloseModal(e)')\r\n  }\r\n\r\n  // if modal is closed it will not be visible on the dom\r\n  if (!targetModal.checkVisibility()) {\r\n    return\r\n  }\r\n\r\n  const rect = targetModal.getBoundingClientRect()\r\n  if (e.x < rect.left || e.x > (rect.width + rect.left)) {\r\n    closeModal()\r\n  } else if (e.y < rect.top || e.y > (rect.height + rect.top)) {\r\n    closeModal()\r\n  }\r\n}\r\n\r\nfunction awaitOutTouchStartToCloseModal(e) {\r\n  if (!targetModalId || !targetModal) {\r\n    throw new Error('no modal target awaitOutTouchStartToCloseModal(e)')\r\n  }\r\n\r\n  const x = e.changedTouches[0].clientX\r\n  const y = e.changedTouches[0].clientY\r\n  const rect = targetModal.getBoundingClientRect()\r\n  // // if modal is closed it will not be visible on the dom\r\n  // // so return\r\n  // if(!modal.checkVisibility()){ return }\r\n\r\n  if (x < rect.left + window.scrollX || x > rect.left + window.scrollX + rect.width) {\r\n    // further left\r\n    targetModal.addEventListener('touchend', awaitOutTouchEndToCloseModal)\r\n  } else if (y < rect.top + window.scrollY || y > rect.top + window.scrollY + rect.height) {\r\n    // above\r\n    targetModal.addEventListener('touchend', awaitOutTouchEndToCloseModal)\r\n  }\r\n}\r\n\r\nfunction awaitOutTouchEndToCloseModal(e) {\r\n  if (!targetModalId || !targetModal) {\r\n    throw new Error('no modal target awaitOutTouchEndToCloseModal(e)')\r\n  }\r\n\r\n  const x = e.changedTouches[0].clientX\r\n  const y = e.changedTouches[0].clientY\r\n  const rect = targetModal.getBoundingClientRect()\r\n\r\n  targetModal.removeEventListener('touchend', awaitOutTouchEndToCloseModal)\r\n  // // if modal is closed it will not be visible on the dom\r\n  // // so return\r\n  // if(!modal.checkVisibility()){ return }\r\n\r\n  if (x < rect.left + window.scrollX || x > rect.left + window.scrollX + rect.width) {\r\n    closeModal()\r\n  } else if (y < rect.top + window.scrollY || y > rect.top + window.scrollY + rect.height) {\r\n    closeModal()\r\n  }\r\n}\r\n\r\nfunction getScrollBarWidth() {\r\n  const el = document.createElement('div')\r\n  el.style.cssText = 'overflow:scroll; visibility:hidden; position:absolute;'\r\n  document.body.append(el)\r\n  const width = el.offsetWidth - el.clientWidth\r\n  el.remove()\r\n  return width\r\n}\r\n\r\nfunction toggleScroll(toggle = true) {\r\n  if (toggle) {\r\n    // get the width of the scrollbar in the document\r\n    const scrollBarWidth = getScrollBarWidth()\r\n    // turn the body scroll off when modal is open\r\n    document.body.classList.add('modal-open')\r\n    // then set the padding of the body to be equal to that\r\n    document.body.style.paddingRight = `${scrollBarWidth}px`\r\n  } else {\r\n    // turn the body scroll off when modal is open\r\n    document.body.classList.remove('modal-open')\r\n    // then set the padding of the body to be equal to that\r\n    document.body.style = ''\r\n  }\r\n}\r\n\r\nfunction toggleEventListenersToCloseModal(toggle = true) {\r\n  if (!targetModalId || !targetModal) {\r\n    throw new Error('no modal target toggleEventListenersToCloseModal(toggle = true)')\r\n  }\r\n\r\n  if (toggle) {\r\n    targetModal.addEventListener('cancel', e => {\r\n      e.preventDefault()\r\n    })\r\n    window.addEventListener('click', awaitOutClickCloseModal)\r\n    document.addEventListener('keydown', awaitEscKeyCloseModal)\r\n    window.addEventListener('touchstart', awaitOutTouchStartToCloseModal)\r\n  } else {\r\n    // eslint-disable-next-line unicorn/no-invalid-remove-event-listener\r\n    targetModal.removeEventListener('cancel', e => {\r\n      e.preventDefault()\r\n    })\r\n    window.removeEventListener('click', awaitOutClickCloseModal)\r\n    document.removeEventListener('keydown', awaitEscKeyCloseModal)\r\n    window.removeEventListener('touchstart', awaitOutTouchStartToCloseModal)\r\n  }\r\n}\r\n\r\nfunction toggleOptionsAndAttributes(toggle = true, options) {\r\n  if (!targetModalId || !targetModal) {\r\n    throw new Error('no modal target toggleOptionsAndAttributes(toggle = true, options)')\r\n  }\r\n\r\n  if (!options) {\r\n    options = new Modal(params)\r\n  }\r\n\r\n  if (toggle) {\r\n    if (options.centered) {\r\n      targetModal.setAttribute('data-centered', '')\r\n    }\r\n\r\n    if (options.static) {\r\n      targetModal.setAttribute('data-static', '')\r\n    }\r\n\r\n    if (options.scrollable) {\r\n      targetModal.setAttribute('data-scrollable', '')\r\n    }\r\n\r\n    if (!options.animation) {\r\n      targetModal.setAttribute('data-no-animation', '')\r\n    }\r\n  } else {\r\n    if (options.centered) {\r\n      targetModal.removeAttribute('data-centered', '')\r\n    }\r\n\r\n    if (options.static) {\r\n      targetModal.removeAttribute('data-static', '')\r\n    }\r\n\r\n    if (options.scrollable) {\r\n      targetModal.removeAttribute('data-scrollable', '')\r\n    }\r\n\r\n    if (!options.animation) {\r\n      targetModal.removeAttribute('data-no-animation', '')\r\n    }\r\n  }\r\n}\r\n\r\nfunction setModalValuesAndEnvironment(id, options) {\r\n  // sanitize the options from the user\r\n  // and save the options for use later\r\n  params = new Modal(options)\r\n  // set the variables id to check against\r\n  targetModalId = id\r\n  // get the element to manipulate\r\n  targetModal = document?.getElementById(targetModalId)\r\n}\r\n\r\nfunction resetModalValuesAndEnvironment() {\r\n  // reset the environment\r\n  targetModalId = null\r\n  targetModal = null\r\n}\r\n\r\nasync function openModal(id, options) {\r\n  // check to see if the environment is ready\r\n  if (!targetModalId || !targetModal) {\r\n    throw new Error('no modal target openModal(id, options)')\r\n  }\r\n\r\n  // set the options, true to set, false to remove, options as second param\r\n  toggleOptionsAndAttributes(true)\r\n\r\n  // Make sure the modal has a focusable target before opening\r\n  setFocus()\r\n\r\n  // eslint-disable-next-line no-warning-comments\r\n  // FIXME - the current solution for the callback is to have\r\n  // timeouts set, this makes for some shoddy looking code and, this\r\n  // can probably be fixed, and I could do it in jquery\r\n  // but that would necessitate the, inclusion of that huge library.\r\n  // Therefore, for now I have settled on making it work first\r\n  // and if I think of a better way of doing this later I'll update it.\r\n\r\n  // then start the open process by setting the display style to block\r\n  targetModal.style.display = 'block'\r\n\r\n  // then set the event listeners for the options\r\n  targetModal.addEventListener('transitionend', toggleOnEventListenersToCloseModal)\r\n\r\n  // the dom needs a moment to update after setting display styles, so set\r\n  // a minimal timeout function before updating the attribute we are\r\n  // checking for in our styles\r\n  setTimeout(() => {\r\n    targetModal.setAttribute('data-modal-open', '')\r\n  }, 1)\r\n\r\n  // now we set up a function that returns after a set amount of time\r\n  const modalStatus = await modalTransitionTimer(options)\r\n  logger.log('Modal Open:', modalStatus)\r\n\r\n  // after the set amount of time call the show-modal function\r\n  // for accessability\r\n  targetModal.showModal()\r\n}\r\n\r\nfunction toggleOnEventListenersToCloseModal() {\r\n  if (!targetModalId || !targetModal) {\r\n    throw new Error('no modal target toggleOnEventListenersToCloseModal()')\r\n  }\r\n\r\n  targetModal.removeEventListener('transitionend', toggleOnEventListenersToCloseModal)\r\n  toggleEventListenersToCloseModal(true)\r\n}\r\n\r\nasync function closeModal() {\r\n  if (!targetModalId || !targetModal) {\r\n    throw new Error('no modal target closeModal()')\r\n  }\r\n\r\n  // remove the closing events for the modal since we are closing it now\r\n  toggleEventListenersToCloseModal(false)\r\n\r\n  // then start the close process\r\n  targetModal.addEventListener('transitionend', toggleOffEventListenersToCloseModal)\r\n  targetModal.removeAttribute('data-modal-open')\r\n\r\n  // now we set up a function that returns after a set amount of time\r\n  const modalStatus = await modalTransitionTimer(params)\r\n  logger.log('Modal Closed:', modalStatus)\r\n}\r\n\r\nfunction toggleOffEventListenersToCloseModal() {\r\n  // remove the listener for the transition\r\n  targetModal.removeEventListener('transitionend', toggleOffEventListenersToCloseModal)\r\n  targetModal.style = ''\r\n  toggleEventListenersToCloseModal(false)\r\n  toggleOptionsAndAttributes(false)\r\n  targetModal.close()\r\n}\r\n\r\nasync function modalTransitionTimer(options) {\r\n  const timeOut = options ? options.transitionTime + 50 : params.transitionTime + 50\r\n  return new Promise(resolve => {\r\n    setTimeout(() => {\r\n      resolve(true)\r\n    }, timeOut)\r\n  })\r\n}\r\n\r\nclass Modals {\r\n  async open(id = '', options = {}) {\r\n    try {\r\n      // user must provide an id to open a modal\r\n      if (id === '') {\r\n        throw new Error('No id provided')\r\n      }\r\n\r\n      // if a modal is opening return to prevent double inputs\r\n      if (modalOpening) {\r\n        return\r\n      }\r\n\r\n      modalOpening = true\r\n\r\n      // if a modal is already open, then close the open one first\r\n      if (targetModalId !== null) {\r\n        await this.close(targetModalId)\r\n      }\r\n\r\n      // set up the environment to work in\r\n      setModalValuesAndEnvironment(id, options)\r\n\r\n      // turn off the scroll of the page\r\n      toggleScroll(true)\r\n\r\n      // then run the open logic\r\n      await openModal(id, options)\r\n\r\n      // set the opening check back to false\r\n      modalOpening = false\r\n    } catch (error) {\r\n      logger.log(error)\r\n    }\r\n  }\r\n\r\n  async close() {\r\n    try {\r\n      // there must be an open modal to close a modal\r\n      if (targetModalId === null) {\r\n        throw new Error('no modal to close')\r\n      }\r\n\r\n      // if the modal is closing, then return to prevent double inputs\r\n      if (modalClosing) {\r\n        return\r\n      }\r\n\r\n      modalClosing = true\r\n\r\n      // then run the close logic\r\n      await closeModal()\r\n\r\n      // if there is a modal opening, don't restore\r\n      // scroll capability\r\n      if (!modalOpening) {\r\n        toggleScroll(false)\r\n      }\r\n\r\n      // clear the environment\r\n      resetModalValuesAndEnvironment()\r\n\r\n      // Set the check back to false\r\n      modalClosing = false\r\n    } catch (error) {\r\n      logger.error(error)\r\n    }\r\n  }\r\n\r\n  async toggle(id = '', options = {}) {\r\n    if (id === '') {\r\n      // if no id provided, default to close\r\n      await this.close()\r\n      return\r\n    }\r\n\r\n    // open a modal if no modal is open or if the id provided is not the\r\n    // id of the currently open modal\r\n    // close the modal if the open modal is equal to the id provided\r\n    await (targetModalId === null || targetModalId !== id ? this.open(id, options) : this.close())\r\n  }\r\n}\r\n\r\nexport const modal = new Modals()\r\n","import { logger } from './Logger.js'\r\n\r\nclass Forms {\r\n  test() {\r\n    logger.log('Dev Mode confirmed - forms')\r\n  }\r\n}\r\n\r\nexport const forms = new Forms()\r\n","import { logger } from './Logger.js'\r\n\r\nclass Pop {\r\n  test() {\r\n    logger.log('Dev Mode confirmed - pop')\r\n  }\r\n}\r\n\r\nexport const pop = new Pop()\r\n","class Loaders {\r\n  loadAllImg() {\r\n    Array.prototype.forEach.call(document.querySelectorAll('img[data-src]'), img => {\r\n      img.setAttribute('src', img.getAttribute('data-src'))\r\n      img.addEventListener('load', () => {\r\n        img.removeAttribute('data-src')\r\n      })\r\n    })\r\n  }\n\r\n  loadAllImgInId(id) {\r\n    Array.prototype.forEach.call(document.getElementById(id).querySelectorAll('img[data-src]'), img => {\r\n      img.setAttribute('src', img.getAttribute('data-src'))\r\n      img.addEventListener('load', () => {\r\n        img.removeAttribute('data-src')\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nexport const loaders = new Loaders()\n","import { suspendors } from './src/Suspendors.js'\r\nimport { registrar } from './src/Registrar.js'\r\nimport { modal } from './src/Modals.js'\r\nimport { forms } from './src/Forms.js'\r\nimport { pop } from './src/Pop.js'\r\nimport { options } from './src/Options.js'\r\nimport { loaders } from './src/Loaders.js'\r\n\r\nexport default {\r\n  suspendors,\r\n  registrar,\r\n  modal,\r\n  forms,\r\n  pop,\r\n  options,\r\n  loaders\r\n}\r\n"],"mappings":"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","ignoreList":[]}