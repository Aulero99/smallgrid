{"version":3,"names":["vars","spacer","minmax","prefix","xxs","xs","sm","md","lg","xl","xxl","dev","log","type","content","console","Date","toLocaleTimeString","logger","arguments","error","warn","assert","trace","under","Event","over","portrait","landscape","orientation","screen","loaded","callScreen","event","title","window","dispatchEvent","callOrient","loadingCheck","document","removeEventListener","setter","loadFlip","update","Setter","setup","addEventListener","this","matchMedia","w","innerWidth","documentElement","clientWidth","body","innerHeight","clientHeight","clearAllThenUpdate","clearOrientThenUpdate","clearScreenThenUpdate","returnOrientation","returnScreen","dynamicWidth","dynamicHeight","VolSizer","h","root","querySelector","style","setProperty","volSizer","getStyle","name","select","getComputedStyle","getPropertyValue","returnNumbersOnly","string","output","s","Number","isNaN","getCssRoot","Array","from","styleSheets","filter","sheet","href","startsWith","location","origin","reduce","acc","cssRules","def","rule","selectorText","Options","importVariablesFromCss","element","key","slice","val","set","length","includes","fontSize","options","Suspendors","constructor","triggerAll","triggerOrientation","triggerScreen","returnVariables","suspendors","Registrar","trigger","flag","runEvents","arr","e","setEventFlags","fn","push","registrar","Modal","data","static","scrollable","disableBodyScroll","centered","animation","transitionTime","targetModalId","targetModal","params","modalClosing","modalOpening","setFocus","Error","autofocus","prototype","forEach","call","querySelectorAll","firstChild","setAttribute","awaitEscKeyCloseModal","keyCode","closeModal","awaitOutClickCloseModal","checkVisibility","rect","getBoundingClientRect","x","left","width","y","top","height","awaitOutTouchStartToCloseModal","changedTouches","clientX","clientY","scrollX","scrollY","awaitOutTouchEndToCloseModal","getScrollBarWidth","el","createElement","cssText","append","offsetWidth","remove","toggleScroll","toggle","scrollBarWidth","classList","add","paddingRight","toggleEventListenersToCloseModal","preventDefault","toggleOptionsAndAttributes","removeAttribute","setModalValuesAndEnvironment","id","getElementById","resetModalValuesAndEnvironment","async","openModal","display","toggleOnEventListenersToCloseModal","setTimeout","modalStatus","modalTransitionTimer","showModal","toggleOffEventListenersToCloseModal","close","timeOut","Promise","resolve","Modals","open","modal","Forms","test","forms","Pop","pop","Loaders","loadAllImg","img","getAttribute","loadAllImgInId","loaders"],"sources":["../../js/src/_variables.js","../../js/src/Logger.js","../../js/src/EventSetter.js","../../js/src/VolSizer.js","../../js/src/Options.js","../../js/src/Suspendors.js","../../js/src/Registrar.js","../../js/src/models/Modal.js","../../js/src/Modals.js","../../js/src/Forms.js","../../js/src/Pop.js","../../js/src/Loaders.js"],"sourcesContent":["export const vars = {\r\n  spacer: 0,\r\n  minmax: null,\r\n  prefix: null,\r\n  xxs: 0,\r\n  xs: 0,\r\n  sm: 0,\r\n  md: 0,\r\n  lg: 0,\r\n  xl: 0,\r\n  xxl: 0,\r\n  dev: false,\r\n  'modal-transition-time': null\r\n}\r\n","/* eslint-disable prefer-rest-params */\r\nimport { vars } from './_variables.js'\r\n\r\nfunction log(type, content) {\r\n  if (vars.dev) {\r\n    // eslint-disable-next-line no-console\r\n    console[type](`[${type}] :: ${new Date().toLocaleTimeString()} :: `, ...content)\r\n  } else {\r\n    // eslint-disable-next-line default-case\r\n    switch (type) {\r\n      case 'log':\r\n      case 'assert': {\r\n        return\r\n      }\r\n    }\r\n\r\n    // eslint-disable-next-line no-warning-comments\r\n    // TODO SEND LOGS TO EXTERNAL SERVICE\r\n    // eslint-disable-next-line no-console\r\n    console[type](`[${type}] :: ${new Date().toLocaleTimeString()} :: `, ...content)\r\n  }\r\n}\r\n\r\nexport const logger = {\r\n  log() {\r\n    log('log', arguments)\r\n  },\r\n  error() {\r\n    log('error', arguments)\r\n  },\r\n  warn() {\r\n    log('warn', arguments)\r\n  },\r\n  assert() {\r\n    log('assert', arguments)\r\n  },\r\n  trace() {\r\n    log('trace', arguments)\r\n  }\r\n}\r\n","import { logger } from './Logger.js'\r\nimport { vars } from './_variables.js'\r\n\r\n// NOTE\r\n// This file sets up the events and the triggers them once the screen\r\n// size matches the variables set up in the Variables.json file\r\n\r\nconst under = new Event('under')\r\nconst xxs = new Event('xxs')\r\nconst xs = new Event('xs')\r\nconst sm = new Event('sm')\r\nconst md = new Event('md')\r\nconst lg = new Event('lg')\r\nconst xl = new Event('xl')\r\nconst xxl = new Event('xxl')\r\nconst over = new Event('over')\r\nconst portrait = new Event('portrait')\r\nconst landscape = new Event('landscape')\r\n\r\nlet orientation = null\r\nlet screen = null\r\nlet loaded = false\r\n\r\nfunction callScreen(event, title) {\r\n  if (screen === title) {\r\n    return\r\n  }\r\n\r\n  screen = title\r\n  if (!loaded) {\r\n    return\r\n  }\r\n\r\n  window.dispatchEvent(event)\r\n}\r\n\r\nfunction callOrient(event, title) {\r\n  if (orientation === title) {\r\n    return\r\n  }\r\n\r\n  orientation = title\r\n  if (!loaded) {\r\n    return\r\n  }\r\n\r\n  window.dispatchEvent(event)\r\n}\r\n\r\nfunction loadingCheck() {\r\n  if (loaded) {\r\n    return\r\n  }\r\n\r\n  loaded = true\r\n  screen = null\r\n  orientation = null\r\n  document.removeEventListener('DOMContentLoaded', setter.loadFlip)\r\n  setter.update()\r\n}\r\n\r\nclass Setter {\r\n  setup() {\r\n    logger.log('Event Setter Logic Online')\r\n    document.addEventListener('DOMContentLoaded', setter.loadFlip)\r\n    window.addEventListener('resize', this.update)\r\n    window.matchMedia('(orientation: portrait)').addEventListener('change', () => {\r\n      this.update()\r\n    })\r\n    this.update()\r\n  }\r\n\r\n  loadFlip() {\r\n    loadingCheck()\r\n  }\r\n\r\n  // eslint-disable-next-line complexity\r\n  update() {\r\n    // NOTE\r\n    // This is the final destination for all update calls in this framework\r\n    // and can be manually triggered to check whether of not the requisite flags\r\n    // should be triggered\r\n\r\n    const w = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\r\n    const h = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight\r\n\r\n    if (w > h) {\r\n      callOrient(landscape, 'landscape')\r\n    } else {\r\n      callOrient(portrait, 'portrait')\r\n    }\r\n\r\n    // NOTE\r\n    // This sets up a logic tree on whether or not it should act according to min-width\r\n    // or max-width to implement over or under logic accordingly as well as to perfectly\r\n    // match the breakpoints in the scss. By default the framework acts exactly as bootstrap\r\n    // but can be changed by matching the variable in the variables.json and the _variables.scss\r\n    // files to either min-width or max-width accordingly\r\n\r\n    // IMPORTANT\r\n    // the min-width and max-width variables must match between the min-width and max-width\r\n    // files for this framework to work\r\n\r\n    if (vars.minmax === 'max-width') {\r\n      switch (w) {\r\n        case w < vars.xxs: {\r\n          callScreen(xxs, 'xxs')\r\n          break\r\n        }\r\n\r\n        case w > vars.xxs && w <= vars.xs: {\r\n          callScreen(xs, 'xs')\r\n          break\r\n        }\r\n\r\n        case w > vars.xs && w <= vars.sm: {\r\n          callScreen(sm, 'sm')\r\n          break\r\n        }\r\n\r\n        case w > vars.sm && w <= vars.md: {\r\n          callScreen(md, 'md')\r\n          break\r\n        }\r\n\r\n        case w > vars.md && w <= vars.lg: {\r\n          callScreen(lg, 'lg')\r\n          break\r\n        }\r\n\r\n        case w > vars.lg && w <= vars.xl: {\r\n          callScreen(xl, 'xl')\r\n          break\r\n        }\r\n\r\n        case w > vars.xl && w <= vars.xxl: {\r\n          callScreen(xxl, 'xxl')\r\n          break\r\n        }\r\n\r\n        default: {\r\n          callScreen(over, 'over')\r\n        }\r\n      }\r\n\r\n    //   if (w <= vars.xxs) {\r\n    //     callScreen(xxs, 'xxs')\r\n    //   } else if (w > vars.xxs && w <= vars.xs) {\r\n    //     callScreen(xs, 'xs')\r\n    //   } else if (w > vars.xs && w <= vars.sm) {\r\n    //     callScreen(sm, 'sm')\r\n    //   } else if (w > vars.sm && w <= vars.md) {\r\n    //     callScreen(md, 'md')\r\n    //   } else if (w > vars.md && w <= vars.lg) {\r\n    //     callScreen(lg, 'lg')\r\n    //   } else if (w > vars.lg && w <= vars.xl) {\r\n    //     callScreen(xl, 'xl')\r\n    //   } else if (w > vars.xl && w <= vars.xxl) {\r\n    //     callScreen(xxl, 'xxl')\r\n    //   } else {\r\n    //     callScreen(over, 'over')\r\n    //   }\r\n    } else {\r\n      switch (w) {\r\n        case w < vars.xxs: {\r\n          callScreen(under, 'under')\r\n          break\r\n        }\r\n\r\n        case w > vars.xxs && w <= vars.xs: {\r\n          callScreen(xxs, 'xxs')\r\n          break\r\n        }\r\n\r\n        case w > vars.xs && w <= vars.sm: {\r\n          callScreen(xs, 'xs')\r\n          break\r\n        }\r\n\r\n        case w > vars.sm && w <= vars.md: {\r\n          callScreen(sm, 'sm')\r\n          break\r\n        }\r\n\r\n        case w > vars.md && w <= vars.lg: {\r\n          callScreen(md, 'md')\r\n          break\r\n        }\r\n\r\n        case w > vars.lg && w <= vars.xl: {\r\n          callScreen(lg, 'lg')\r\n          break\r\n        }\r\n\r\n        case w > vars.xl && w <= vars.xxl: {\r\n          callScreen(xl, 'xl')\r\n          break\r\n        }\r\n\r\n        default: {\r\n          callScreen(xxl, 'xxl')\r\n        }\r\n      }\r\n\r\n      // if (w < vars.xxs) {\r\n      //     callScreen(under, 'under')\r\n      // } else if (w >= vars.xxs && w < vars.xs) {\r\n      //     callScreen(xxs, 'xxs')\r\n      // } else if (w >= vars.xs && w < vars.sm) {\r\n      //     callScreen(xs, 'xs')\r\n      // } else if (w >= vars.sm && w < vars.md) {\r\n      //     callScreen(sm, 'sm')\r\n      // } else if (w >= vars.md && w < vars.lg) {\r\n      //     callScreen(md, 'md')\r\n      // } else if (w >= vars.lg && w < vars.xl) {\r\n      //     callScreen(lg, 'lg')\r\n      // } else if (w >= vars.xl && w < vars.xxl) {\r\n      //     callScreen(xl, 'xl')\r\n      // } else {\r\n      //     callScreen(xxl, 'xxl')\r\n      // }\r\n    }\r\n  }\r\n\r\n  // NOTE\r\n  // these functions are a fix to allow for the trigger to fire events by\r\n  // clearing the variables that don't allow for the events to fire\r\n  // before calling the update\r\n\r\n  clearAllThenUpdate() {\r\n    this.clearOrientThenUpdate()\r\n    this.clearScreenThenUpdate()\r\n  }\r\n\r\n  clearScreenThenUpdate() {\r\n    screen = null\r\n    orientation = null\r\n    this.update()\r\n  }\r\n\r\n  clearOrientThenUpdate() {\r\n    screen = null\r\n    orientation = null\r\n    this.update()\r\n  }\r\n\r\n  // NOTE\r\n  // These functions return the current state of the\r\n  // breakpoints and orientation as strings\r\n\r\n  returnOrientation() {\r\n    if (!orientation) {\r\n      this.update()\r\n    }\r\n\r\n    logger.log('The current orientation is ', orientation)\r\n    return orientation\r\n  }\r\n\r\n  returnScreen() {\r\n    if (!screen) {\r\n      this.update()\r\n    }\r\n\r\n    logger.log('The current screen is ', screen)\r\n    return screen\r\n  }\r\n}\r\n\r\nexport const setter = new Setter()\r\n","import { logger } from './Logger.js'\r\nimport { vars } from './_variables.js'\r\n\r\n// NOTE\r\n// This is an independent file for setting the dynamic\r\n// size for the scss to tap in to for the cvh and cvw variables\r\n// and sets the foundation for the framework to work within\r\n\r\nlet dynamicWidth = null\r\nlet dynamicHeight = null\r\n\r\nclass VolSizer {\r\n  setup() {\r\n    logger.log('Sizer Logic Online')\r\n    window.addEventListener('resize', this.update)\r\n    window.matchMedia('(orientation: portrait)').addEventListener('change', () => {\r\n      this.update()\r\n    })\r\n  }\r\n\r\n  update() {\r\n    // logger.log('Updating CSS Size')\r\n    const w = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth\r\n    const h = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight\r\n\r\n    // NOTE\r\n    // This check stops the update if the browser is mobile, the screen size is below\r\n    // the md breakpoint and if the width has not changed. This makes it so that\r\n    // a change to the viewport size, like navigation sliding on or off the screen\r\n    // will not cause the page to jump drastically. Solutions to completely eliminate jumps\r\n    // at higher scroll speeds are still being tested, but this works seamlessly on at least 80% of\r\n    // devices at low to md scroll speeds, with only the highest scroll speeds causing visual\r\n    // glitches at infrequent intervals and mostly on a scroll up action.\r\n\r\n    if (h < dynamicHeight && w === dynamicWidth && w <= vars.lg) {\r\n      return\r\n    }\r\n\r\n    dynamicWidth = w\r\n    dynamicHeight = h\r\n\r\n    const root = document.querySelector(':root')\r\n    const { prefix } = vars\r\n    // @ts-ignore\r\n    root.style.setProperty(`--${prefix}vh100`, `${h}px`)\r\n    // @ts-ignore\r\n    root.style.setProperty(`--${prefix}vw100`, `${w}px`)\r\n  }\r\n}\r\n\r\nexport const volSizer = new VolSizer()\r\n","/* eslint-disable no-return-assign */\r\n/* eslint-disable unicorn/no-array-reduce */\r\nimport { logger } from './Logger.js'\r\nimport { vars } from './_variables.js'\r\n\r\nconst root = document.querySelector(':root')\r\n\r\nfunction getStyle(name) {\r\n  const select = (root !== undefined && root !== null) ? getComputedStyle(root) : null\r\n  if (select !== null) {\r\n    return select.getPropertyValue(name)\r\n  }\r\n\r\n  return null\r\n}\r\n\r\nfunction returnNumbersOnly(string) {\r\n  let output = ''\r\n  for (const s of string) {\r\n    if (!Number.isNaN(s) || s === '.') {\r\n      output += s\r\n    } else {\r\n      break\r\n    }\r\n  }\r\n\r\n  return Number(output)\r\n}\r\n\r\nfunction getCssRoot() {\r\n  const cssVars = Array.from(document.styleSheets)\r\n    .filter(\r\n      sheet =>\r\n        sheet.href === null || sheet.href.startsWith(window.location.origin)\r\n    )\r\n    .reduce(\r\n      (acc, sheet) =>\r\n        (acc = [\r\n          ...acc,\r\n          ...Array.from(sheet.cssRules).reduce(\r\n            (def, rule) =>\r\n              (def =\r\n                rule.selectorText === ':root' ?\r\n                  [\r\n                    ...def,\r\n                    ...Array.from(rule.style).filter(name =>\r\n                      name.startsWith('--')\r\n                    )\r\n                  ] :\r\n                  def),\r\n            []\r\n          )\r\n        ]),\r\n      []\r\n    )\r\n  return cssVars\r\n}\r\n\r\nclass Options {\r\n  importVariablesFromCss() {\r\n    const root = getCssRoot()\r\n    logger.log('the found root is: ', root)\r\n\r\n    const prefix = getStyle('--prefix')\r\n    vars.prefix = prefix\r\n\r\n    for (const element of root) {\r\n      const key = element.slice(2)\r\n      const val = getStyle(element)\r\n      let set = null\r\n\r\n      // skip if value is nulled or key is too long\r\n      if (val.length === 0 || key.length > 30) {\r\n        continue\r\n      }\r\n\r\n      // skip the prefix\r\n      if (key === 'prefix') {\r\n        continue\r\n      }\r\n\r\n      // skip the vh100 and vw100 values, which we only need to set not get\r\n      if (key === `${prefix}vh100` || key === `${prefix}vw100`) {\r\n        continue\r\n      }\r\n\r\n      // skip the spacer, set that later\r\n      if (key === `${prefix}spacer`) {\r\n        continue\r\n      }\r\n\r\n      // skip if prefix is not detected, for the rest of the rooted variables\r\n      if (!key.includes(prefix)) {\r\n        continue\r\n      }\r\n\r\n      // set the value to a number if first digit is a number, otherwise set it as a string\r\n      set = Number.isNaN(val[0]) ? val : returnNumbersOnly(val)\r\n\r\n      vars[`${key.slice(prefix.length)}`] = set\r\n    }\r\n\r\n    // set the spacer as a result of the rem times the base px value of the font size\r\n    const spacer = returnNumbersOnly(getStyle(`--${prefix}spacer`)) * returnNumbersOnly(window.getComputedStyle(document.body).fontSize)\r\n    vars.spacer = spacer\r\n\r\n    logger.log('The vars are now: ', vars)\r\n    document.removeEventListener('DOMContentLoaded', options.importVariablesFromCss)\r\n  }\r\n\r\n  dev() {\r\n    vars.dev = true\r\n    logger.log('set dev mode to true')\r\n  }\r\n}\r\nexport const options = new Options()\r\ndocument.addEventListener('DOMContentLoaded', options.importVariablesFromCss)\r\n","import { setter } from './EventSetter.js'\r\nimport { volSizer } from './VolSizer.js'\r\nimport { logger } from './Logger.js'\r\nimport { vars } from './_variables.js'\r\nimport { options } from './Options.js'\r\n\r\nclass Suspendors {\r\n  constructor() {\r\n    logger.log('Suspendors Online')\r\n\r\n    volSizer.setup()\r\n    setter.setup()\r\n  }\r\n\r\n  // NOTE\r\n  // These are functions that will allow for\r\n  // manual triggers of the current breakpoint\r\n  // or orientation that will remain consistent\r\n  // with all listeners and registered\r\n  // functions\r\n\r\n  triggerAll() {\r\n    setter.clearAllThenUpdate()\r\n  }\r\n\r\n  triggerOrientation() {\r\n    setter.clearOrientThenUpdate()\r\n  }\r\n\r\n  triggerScreen() {\r\n    setter.clearScreenThenUpdate()\r\n  }\r\n\r\n  // NOTE\r\n  // These functions return the values of the\r\n  // state of the breakpoints and the\r\n  // orientation values\r\n\r\n  returnScreen() {\r\n    return setter.returnScreen()\r\n  }\r\n\r\n  returnOrientation() {\r\n    return setter.returnOrientation()\r\n  }\r\n\r\n  returnVariables() {\r\n    return vars\r\n  }\r\n\r\n  dev() {\r\n    options.dev()\r\n  }\r\n}\r\n\r\nexport const suspendors = new Suspendors()\r\n","import { logger } from './Logger.js'\r\n\r\nconst under = []\r\nconst xxs = []\r\nconst xs = []\r\nconst sm = []\r\nconst md = []\r\nconst lg = []\r\nconst xl = []\r\nconst xxl = []\r\nconst over = []\r\nconst landscape = []\r\nconst portrait = []\r\n\r\nclass Registrar {\r\n  constructor() {\r\n    logger.log('Registrar Online')\r\n    window.addEventListener('under', () => {\r\n      this.trigger('under')\r\n    }, false)\r\n    window.addEventListener('xxs', () => {\r\n      this.trigger('xxs')\r\n    }, false)\r\n    window.addEventListener('xs', () => {\r\n      this.trigger('xs')\r\n    }, false)\r\n    window.addEventListener('sm', () => {\r\n      this.trigger('sm')\r\n    }, false)\r\n    window.addEventListener('md', () => {\r\n      this.trigger('md')\r\n    }, false)\r\n    window.addEventListener('lg', () => {\r\n      this.trigger('lg')\r\n    }, false)\r\n    window.addEventListener('xl', () => {\r\n      this.trigger('xl')\r\n    }, false)\r\n    window.addEventListener('xxl', () => {\r\n      this.trigger('xxl')\r\n    }, false)\r\n    window.addEventListener('over', () => {\r\n      this.trigger('over')\r\n    }, false)\r\n    window.addEventListener('portrait', () => {\r\n      this.trigger('portrait')\r\n    }, false)\r\n    window.addEventListener('landscape', () => {\r\n      this.trigger('landscape')\r\n    }, false)\r\n  }\r\n\r\n  trigger(flag) {\r\n    logger.log(`Triggering ${flag}`)\r\n    if (flag === 'under') {\r\n      this.runEvents(under)\r\n      return\r\n    }\r\n\r\n    if (flag === 'sm') {\r\n      this.runEvents(sm)\r\n      return\r\n    }\r\n\r\n    if (flag === 'md') {\r\n      this.runEvents(md)\r\n      return\r\n    }\r\n\r\n    if (flag === 'lg') {\r\n      this.runEvents(lg)\r\n      return\r\n    }\r\n\r\n    if (flag === 'xl') {\r\n      this.runEvents(xl)\r\n      return\r\n    }\r\n\r\n    if (flag === 'xxl') {\r\n      this.runEvents(xxl)\r\n      return\r\n    }\r\n\r\n    if (flag === 'over') {\r\n      this.runEvents(over)\r\n      return\r\n    }\r\n\r\n    if (flag === 'landscape') {\r\n      this.runEvents(landscape)\r\n      return\r\n    }\r\n\r\n    if (flag === 'portrait') {\r\n      this.runEvents(portrait)\r\n    }\r\n  }\r\n\r\n  runEvents(arr) {\r\n    if (arr.length < 1) {\r\n      return\r\n    }\r\n\r\n    for (const e of arr) {\r\n      if (typeof e === 'function') {\r\n        e()\r\n      }\r\n    }\r\n  }\r\n\r\n  setEventFlags(fn, flag) {\r\n    if (typeof fn === 'function') {\r\n      logger.log('valid function')\r\n      if (flag === 'under') {\r\n        under.push(fn)\r\n        return\r\n      }\r\n\r\n      if (flag === 'xxs') {\r\n        xxs.push(fn)\r\n        return\r\n      }\r\n\r\n      if (flag === 'xs') {\r\n        xs.push(fn)\r\n        return\r\n      }\r\n\r\n      if (flag === 'sm') {\r\n        sm.push(fn)\r\n        return\r\n      }\r\n\r\n      if (flag === 'md') {\r\n        md.push(fn)\r\n        return\r\n      }\r\n\r\n      if (flag === 'lg') {\r\n        lg.push(fn)\r\n        return\r\n      }\r\n\r\n      if (flag === 'xl') {\r\n        xl.push(fn)\r\n        return\r\n      }\r\n\r\n      if (flag === 'xxl') {\r\n        xxl.push(fn)\r\n        return\r\n      }\r\n\r\n      if (flag === 'over') {\r\n        over.push(fn)\r\n        return\r\n      }\r\n\r\n      if (flag === 'landscape') {\r\n        landscape.push(fn)\r\n        return\r\n      }\r\n\r\n      if (flag === 'portrait') {\r\n        portrait.push(fn)\r\n      }\r\n    } else {\r\n      logger.log('not a valid function')\r\n    }\r\n  }\r\n\r\n  under(fn) {\r\n    logger.log('registering function: ', fn, ' at breakpoint under')\r\n    this.setEventFlags(fn, 'under')\r\n  }\r\n\r\n  xxs(fn) {\r\n    logger.log('registering function: ', fn, ' at breakpoint sm')\r\n    this.setEventFlags(fn, 'xxs')\r\n  }\r\n\r\n  xs(fn) {\r\n    logger.log('registering function: ', fn, ' at breakpoint sm')\r\n    this.setEventFlags(fn, 'xs')\r\n  }\r\n\r\n  sm(fn) {\r\n    logger.log('registering function: ', fn, ' at breakpoint sm')\r\n    this.setEventFlags(fn, 'sm')\r\n  }\r\n\r\n  md(fn) {\r\n    logger.log('registering function: ', fn, ' at breakpoint md')\r\n    this.setEventFlags(fn, 'md')\r\n  }\r\n\r\n  lg(fn) {\r\n    logger.log('registering function: ', fn, ' at breakpoint lg')\r\n    this.setEventFlags(fn, 'lg')\r\n  }\r\n\r\n  xl(fn) {\r\n    logger.log('registering function: ', fn, ' at breakpoint xl')\r\n    this.setEventFlags(fn, 'xl')\r\n  }\r\n\r\n  xxl(fn) {\r\n    logger.log('registering function: ', fn, ' at breakpoint xxl')\r\n    this.setEventFlags(fn, 'xxl')\r\n  }\r\n\r\n  over(fn) {\r\n    logger.log('registering function: ', fn, ' at breakpoint over')\r\n    this.setEventFlags(fn, 'over')\r\n  }\r\n\r\n  landscape(fn) {\r\n    logger.log('registering function: ', fn, ' at orientation landscape')\r\n    this.setEventFlags(fn, 'landscape')\r\n  }\r\n\r\n  portrait(fn) {\r\n    logger.log('registering function: ', fn, ' at orientation portrait')\r\n    this.setEventFlags(fn, 'portrait')\r\n  }\r\n}\r\nexport const registrar = new Registrar()\r\n","import { vars } from '../_variables.js'\r\n\r\nexport class Modal {\r\n  constructor(data) {\r\n    this.static = data.static || false\r\n    this.scrollable = data.scrollable || false\r\n    this.disableBodyScroll = data.disableBodyScroll || true\r\n    this.centered = data.centered || false\r\n    this.animation = data.animation || true\r\n    this.transitionTime = data.transitionTime || vars['modal-transition-time'] ? vars['modal-transition-time'] : 1\r\n  }\r\n}\r\n","import { logger } from './Logger.js'\r\nimport { Modal } from './models/Modal.js'\r\n\r\nlet targetModalId = null\r\nlet targetModal = null\r\nlet params = {}\r\nlet modalClosing = false\r\nlet modalOpening = false\r\n\r\nfunction setFocus() {\r\n  if (!targetModalId || !targetModal) {\r\n    throw new Error('no modal target setFocus()')\r\n  }\r\n\r\n  // Check to see if an element has the autofocus attribute applied,\r\n  // and if not apply it to the first child of the element.\r\n  let autofocus = 0\r\n  Array.prototype.forEach.call(targetModal.querySelectorAll('[autofocus]'), () => {\r\n    autofocus++\r\n  })\r\n  if (autofocus === 0) {\r\n    logger.log('no autofocus target provided, setting first child to autofocus.')\r\n    targetModal.firstChild.setAttribute('autofocus', '')\r\n  }\r\n}\r\n\r\nfunction awaitEscKeyCloseModal(e) {\r\n  // listen for the user to press escape key, then fire the code\r\n  // to close the modal\r\n  if (e.key === 'Escape' || e.keyCode === 27) {\r\n    logger.log('escape pressed')\r\n    closeModal()\r\n  }\r\n}\r\n\r\nfunction awaitOutClickCloseModal(e) {\r\n  if (!targetModalId || !targetModal) {\r\n    throw new Error('no modal target awaitOutClickCloseModal(e)')\r\n  }\r\n\r\n  // if modal is closed it will not be visible on the dom\r\n  if (!targetModal.checkVisibility()) {\r\n    return\r\n  }\r\n\r\n  const rect = targetModal.getBoundingClientRect()\r\n  if (e.x < rect.left || e.x > (rect.width + rect.left)) {\r\n    closeModal()\r\n  } else if (e.y < rect.top || e.y > (rect.height + rect.top)) {\r\n    closeModal()\r\n  }\r\n}\r\n\r\nfunction awaitOutTouchStartToCloseModal(e) {\r\n  if (!targetModalId || !targetModal) {\r\n    throw new Error('no modal target awaitOutTouchStartToCloseModal(e)')\r\n  }\r\n\r\n  const x = e.changedTouches[0].clientX\r\n  const y = e.changedTouches[0].clientY\r\n  const rect = targetModal.getBoundingClientRect()\r\n  // // if modal is closed it will not be visible on the dom\r\n  // // so return\r\n  // if(!modal.checkVisibility()){ return }\r\n\r\n  if (x < rect.left + window.scrollX || x > rect.left + window.scrollX + rect.width) {\r\n    // further left\r\n    targetModal.addEventListener('touchend', awaitOutTouchEndToCloseModal)\r\n  } else if (y < rect.top + window.scrollY || y > rect.top + window.scrollY + rect.height) {\r\n    // above\r\n    targetModal.addEventListener('touchend', awaitOutTouchEndToCloseModal)\r\n  }\r\n}\r\n\r\nfunction awaitOutTouchEndToCloseModal(e) {\r\n  if (!targetModalId || !targetModal) {\r\n    throw new Error('no modal target awaitOutTouchEndToCloseModal(e)')\r\n  }\r\n\r\n  const x = e.changedTouches[0].clientX\r\n  const y = e.changedTouches[0].clientY\r\n  const rect = targetModal.getBoundingClientRect()\r\n\r\n  targetModal.removeEventListener('touchend', awaitOutTouchEndToCloseModal)\r\n  // // if modal is closed it will not be visible on the dom\r\n  // // so return\r\n  // if(!modal.checkVisibility()){ return }\r\n\r\n  if (x < rect.left + window.scrollX || x > rect.left + window.scrollX + rect.width) {\r\n    closeModal()\r\n  } else if (y < rect.top + window.scrollY || y > rect.top + window.scrollY + rect.height) {\r\n    closeModal()\r\n  }\r\n}\r\n\r\nfunction getScrollBarWidth() {\r\n  const el = document.createElement('div')\r\n  el.style.cssText = 'overflow:scroll; visibility:hidden; position:absolute;'\r\n  document.body.append(el)\r\n  const width = el.offsetWidth - el.clientWidth\r\n  el.remove()\r\n  return width\r\n}\r\n\r\nfunction toggleScroll(toggle = true) {\r\n  if (toggle) {\r\n    // get the width of the scrollbar in the document\r\n    const scrollBarWidth = getScrollBarWidth()\r\n    // turn the body scroll off when modal is open\r\n    document.body.classList.add('modal-open')\r\n    // then set the padding of the body to be equal to that\r\n    document.body.style.paddingRight = `${scrollBarWidth}px`\r\n  } else {\r\n    // turn the body scroll off when modal is open\r\n    document.body.classList.remove('modal-open')\r\n    // then set the padding of the body to be equal to that\r\n    document.body.style = ''\r\n  }\r\n}\r\n\r\nfunction toggleEventListenersToCloseModal(toggle = true) {\r\n  if (!targetModalId || !targetModal) {\r\n    throw new Error('no modal target toggleEventListenersToCloseModal(toggle = true)')\r\n  }\r\n\r\n  if (toggle) {\r\n    targetModal.addEventListener('cancel', e => {\r\n      e.preventDefault()\r\n    })\r\n    window.addEventListener('click', awaitOutClickCloseModal)\r\n    document.addEventListener('keydown', awaitEscKeyCloseModal)\r\n    window.addEventListener('touchstart', awaitOutTouchStartToCloseModal)\r\n  } else {\r\n    // eslint-disable-next-line unicorn/no-invalid-remove-event-listener\r\n    targetModal.removeEventListener('cancel', e => {\r\n      e.preventDefault()\r\n    })\r\n    window.removeEventListener('click', awaitOutClickCloseModal)\r\n    document.removeEventListener('keydown', awaitEscKeyCloseModal)\r\n    window.removeEventListener('touchstart', awaitOutTouchStartToCloseModal)\r\n  }\r\n}\r\n\r\nfunction toggleOptionsAndAttributes(toggle = true, options) {\r\n  if (!targetModalId || !targetModal) {\r\n    throw new Error('no modal target toggleOptionsAndAttributes(toggle = true, options)')\r\n  }\r\n\r\n  if (!options) {\r\n    options = new Modal(params)\r\n  }\r\n\r\n  if (toggle) {\r\n    if (options.centered) {\r\n      targetModal.setAttribute('data-centered', '')\r\n    }\r\n\r\n    if (options.static) {\r\n      targetModal.setAttribute('data-static', '')\r\n    }\r\n\r\n    if (options.scrollable) {\r\n      targetModal.setAttribute('data-scrollable', '')\r\n    }\r\n\r\n    if (!options.animation) {\r\n      targetModal.setAttribute('data-no-animation', '')\r\n    }\r\n  } else {\r\n    if (options.centered) {\r\n      targetModal.removeAttribute('data-centered', '')\r\n    }\r\n\r\n    if (options.static) {\r\n      targetModal.removeAttribute('data-static', '')\r\n    }\r\n\r\n    if (options.scrollable) {\r\n      targetModal.removeAttribute('data-scrollable', '')\r\n    }\r\n\r\n    if (!options.animation) {\r\n      targetModal.removeAttribute('data-no-animation', '')\r\n    }\r\n  }\r\n}\r\n\r\nfunction setModalValuesAndEnvironment(id, options) {\r\n  // sanitize the options from the user\r\n  // and save the options for use later\r\n  params = new Modal(options)\r\n  // set the variables id to check against\r\n  targetModalId = id\r\n  // get the element to manipulate\r\n  targetModal = document?.getElementById(targetModalId)\r\n}\r\n\r\nfunction resetModalValuesAndEnvironment() {\r\n  // reset the environment\r\n  targetModalId = null\r\n  targetModal = null\r\n}\r\n\r\nasync function openModal(id, options) {\r\n  // check to see if the environment is ready\r\n  if (!targetModalId || !targetModal) {\r\n    throw new Error('no modal target openModal(id, options)')\r\n  }\r\n\r\n  // set the options, true to set, false to remove, options as second param\r\n  toggleOptionsAndAttributes(true)\r\n\r\n  // Make sure the modal has a focusable target before opening\r\n  setFocus()\r\n\r\n  // eslint-disable-next-line no-warning-comments\r\n  // FIXME - the current solution for the callback is to have\r\n  // timeouts set, this makes for some shoddy looking code and, this\r\n  // can probably be fixed, and I could do it in jquery\r\n  // but that would necessitate the, inclusion of that huge library.\r\n  // Therefore, for now I have settled on making it work first\r\n  // and if I think of a better way of doing this later I'll update it.\r\n\r\n  // then start the open process by setting the display style to block\r\n  targetModal.style.display = 'block'\r\n\r\n  // then set the event listeners for the options\r\n  targetModal.addEventListener('transitionend', toggleOnEventListenersToCloseModal)\r\n\r\n  // the dom needs a moment to update after setting display styles, so set\r\n  // a minimal timeout function before updating the attribute we are\r\n  // checking for in our styles\r\n  setTimeout(() => {\r\n    targetModal.setAttribute('data-modal-open', '')\r\n  }, 1)\r\n\r\n  // now we set up a function that returns after a set amount of time\r\n  const modalStatus = await modalTransitionTimer(options)\r\n  logger.log('Modal Open:', modalStatus)\r\n\r\n  // after the set amount of time call the show-modal function\r\n  // for accessability\r\n  targetModal.showModal()\r\n}\r\n\r\nfunction toggleOnEventListenersToCloseModal() {\r\n  if (!targetModalId || !targetModal) {\r\n    throw new Error('no modal target toggleOnEventListenersToCloseModal()')\r\n  }\r\n\r\n  targetModal.removeEventListener('transitionend', toggleOnEventListenersToCloseModal)\r\n  toggleEventListenersToCloseModal(true)\r\n}\r\n\r\nasync function closeModal() {\r\n  if (!targetModalId || !targetModal) {\r\n    throw new Error('no modal target closeModal()')\r\n  }\r\n\r\n  // remove the closing events for the modal since we are closing it now\r\n  toggleEventListenersToCloseModal(false)\r\n\r\n  // then start the close process\r\n  targetModal.addEventListener('transitionend', toggleOffEventListenersToCloseModal)\r\n  targetModal.removeAttribute('data-modal-open')\r\n\r\n  // now we set up a function that returns after a set amount of time\r\n  const modalStatus = await modalTransitionTimer(params)\r\n  logger.log('Modal Closed:', modalStatus)\r\n}\r\n\r\nfunction toggleOffEventListenersToCloseModal() {\r\n  // remove the listener for the transition\r\n  targetModal.removeEventListener('transitionend', toggleOffEventListenersToCloseModal)\r\n  targetModal.style = ''\r\n  toggleEventListenersToCloseModal(false)\r\n  toggleOptionsAndAttributes(false)\r\n  targetModal.close()\r\n}\r\n\r\nasync function modalTransitionTimer(options) {\r\n  const timeOut = options ? options.transitionTime + 50 : params.transitionTime + 50\r\n  return new Promise(resolve => {\r\n    setTimeout(() => {\r\n      resolve(true)\r\n    }, timeOut)\r\n  })\r\n}\r\n\r\nclass Modals {\r\n  async open(id = '', options = {}) {\r\n    try {\r\n      // user must provide an id to open a modal\r\n      if (id === '') {\r\n        throw new Error('No id provided')\r\n      }\r\n\r\n      // if a modal is opening return to prevent double inputs\r\n      if (modalOpening) {\r\n        return\r\n      }\r\n\r\n      modalOpening = true\r\n\r\n      // if a modal is already open, then close the open one first\r\n      if (targetModalId !== null) {\r\n        await this.close(targetModalId)\r\n      }\r\n\r\n      // set up the environment to work in\r\n      setModalValuesAndEnvironment(id, options)\r\n\r\n      // turn off the scroll of the page\r\n      toggleScroll(true)\r\n\r\n      // then run the open logic\r\n      await openModal(id, options)\r\n\r\n      // set the opening check back to false\r\n      modalOpening = false\r\n    } catch (error) {\r\n      logger.log(error)\r\n    }\r\n  }\r\n\r\n  async close() {\r\n    try {\r\n      // there must be an open modal to close a modal\r\n      if (targetModalId === null) {\r\n        throw new Error('no modal to close')\r\n      }\r\n\r\n      // if the modal is closing, then return to prevent double inputs\r\n      if (modalClosing) {\r\n        return\r\n      }\r\n\r\n      modalClosing = true\r\n\r\n      // then run the close logic\r\n      await closeModal()\r\n\r\n      // if there is a modal opening, don't restore\r\n      // scroll capability\r\n      if (!modalOpening) {\r\n        toggleScroll(false)\r\n      }\r\n\r\n      // clear the environment\r\n      resetModalValuesAndEnvironment()\r\n\r\n      // Set the check back to false\r\n      modalClosing = false\r\n    } catch (error) {\r\n      logger.error(error)\r\n    }\r\n  }\r\n\r\n  async toggle(id = '', options = {}) {\r\n    if (id === '') {\r\n      // if no id provided, default to close\r\n      await this.close()\r\n      return\r\n    }\r\n\r\n    // open a modal if no modal is open or if the id provided is not the\r\n    // id of the currently open modal\r\n    // close the modal if the open modal is equal to the id provided\r\n    await (targetModalId === null || targetModalId !== id ? this.open(id, options) : this.close())\r\n  }\r\n}\r\n\r\nexport const modal = new Modals()\r\n","import { logger } from './Logger.js'\r\n\r\nclass Forms {\r\n  test() {\r\n    logger.log('Dev Mode confirmed - forms')\r\n  }\r\n}\r\n\r\nexport const forms = new Forms()\r\n","import { logger } from './Logger.js'\r\n\r\nclass Pop {\r\n  test() {\r\n    logger.log('Dev Mode confirmed - pop')\r\n  }\r\n}\r\n\r\nexport const pop = new Pop()\r\n","class Loaders {\r\n  loadAllImg() {\r\n    Array.prototype.forEach.call(document.querySelectorAll('img[data-src]'), img => {\r\n      img.setAttribute('src', img.getAttribute('data-src'))\r\n      img.addEventListener('load', () => {\r\n        img.removeAttribute('data-src')\r\n      })\r\n    })\r\n  }\n\r\n  loadAllImgInId(id) {\r\n    Array.prototype.forEach.call(document.getElementById(id).querySelectorAll('img[data-src]'), img => {\r\n      img.setAttribute('src', img.getAttribute('data-src'))\r\n      img.addEventListener('load', () => {\r\n        img.removeAttribute('data-src')\r\n      })\r\n    })\r\n  }\r\n}\r\n\r\nexport const loaders = new Loaders()\n"],"mappings":"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","ignoreList":[]}