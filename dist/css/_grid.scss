@import "./_variables.scss";

$breakpoints:("sm":$sm, "md":$md, "lg":$lg, "xl":$xl, "xxl":$xxl );
$paddings:("0":0, "1":$p1, "2":$p2, "3":$p3, "4":$p4, "5":$gutter);

*{ box-sizing: border-box; }

.container{
    display: block;
    width: 100%;
    max-width: 100vw;
    overflow-x: hidden;
    margin-left: auto;
    margin-right: auto;
    padding-left: calc($gutter * .5);
    padding-right: calc($gutter * .5); 

    // @each $key, $value in $breakpoints{
    //     @media screen and (max-width: $value){max-width: calc($value - $gutter) !important;}
    // }

    .row{
        display: flex;
        flex-direction: row;
        flex-wrap: wrap;
        margin-left: calc($gutter * -.5);
        margin-right: calc($gutter * -.5);
        .col-fill{
            width: 0;
            flex-grow: 1;
        }

        .col-12{ width: 100%; }
        .col-11{ width: calc( (11/12) * 100% ); }
        .col-10{ width: calc( (5/6) * 100% ); }
        .col-9{ width: 75%; }
        .col-8{ width: calc( (2/3) * 100% ); }
        .col-7{ width: calc( (7/12) * 100% ); }
        .col-6{ width: 50%; }
        .col-5{ width: calc( (5/12) * 100% ); }
        .col-4{ width: calc( (1/3) * 100% ); }
        .col-3{ width: 25%; }
        .col-2{ width: calc( (1/6) * 100% ); }
        .col-1{ width: calc( (1/12) * 100% ); }

        @each $key, $value in $breakpoints{
            @media screen and ($minmax: $value){
                .col-#{$key}-12{ width: 100% !important; }
                .col-#{$key}-11{ width: calc( (11/12) * 100% ) !important; }
                .col-#{$key}-10{ width: calc( (5/6) * 100% ) !important; }
                .col-#{$key}-9{ width: 75% !important; }
                .col-#{$key}-8{ width: calc( (2/3) * 100% ) !important; }
                .col-#{$key}-7{ width: calc( (7/12) * 100% ) !important; }
                .col-#{$key}-6{ width: 50% !important; }
                .col-#{$key}-5{ width: calc( (5/12) * 100% ) !important; }
                .col-#{$key}-4{ width: calc( (1/3) * 100% ) !important; }
                .col-#{$key}-3{ width: 25%; }
                .col-#{$key}-2{ width: calc( (1/6) * 100% ) !important; }
                .col-#{$key}-1{ width: calc( (1/12) * 100% ) !important; }
            }
        }

        &.m-0{
            margin-left: calc($gutter * -.5) !important;
            margin-right: calc($gutter * -.5) !important; 
        }
        &.m-1{
            margin-left: calc($gutter * -.4) !important;
            margin-right: calc($gutter * -.4) !important; 
        }
        &.m-2{
            margin-left: calc($gutter * -.3 ) !important;
            margin-right: calc($gutter * -.3 ) !important; 
        }
        &.m-3{             
            margin-left: calc($gutter * -.2 ) !important;
            margin-right: calc($gutter * -.2 ) !important; 
        }
        &.m-4{ 
            margin-left: calc($gutter * -.1 ) !important;
            margin-right: calc($gutter * -.1 ) !important; 
        }
        &.m-5{ margin: 0 !important; }
    }
}

.flex-row{
    display: flex;
    flex-direction: row;
    .wrap{ flex-wrap: wrap; }
}
.flex-col{
    display: flex;
    flex-direction: column;
    .wrap{ flex-wrap: wrap; }
}
.grow-1{ flex-grow: 1; }
.fill{
    height: 100%;
    width: 100%;
    flex-grow: 1;
}
.fill-x{ width: 100%; }
.fill-y{ height: 100%; }

@each $key, $value in $breakpoints{
    @media screen and ($minmax: $value){
        .flex-#{$key}-row{
            display: flex !important;
            flex-direction: row !important;
            .wrap{ flex-wrap: wrap !important; }
        }
        .flex-#{$key}-col{
            display: flex !important;
            flex-direction: column !important;
            .wrap{ flex-wrap: wrap !important; }
        }
        .grow-#{$key}-1{ flex-grow: 1 !important; }
        .fill-#{$key} {
            height: 100% !important;
            width: 100% !important;
            flex-grow: 1 !important;
        }
        .fill-#{$key}-x{ width: 100% !important; }
        .fill-#{$key}-y{ height: 100% !important; }
    }
}

.align-start{
    align-items: flex-start;
    align-content: flex-start;
}
.align-center{
    align-items: center;
    align-content: center;
}
.align-end{
    align-items: flex-end;
    align-content: flex-end;
}
.align-between{
    align-content: space-between;
    align-items: space-between;
}
.align-around{
    align-content: space-around;
    align-items: space-around;
}
.align-even{
    align-content: space-evenly;
    align-items: space-evenly;
}
.justify-start{
    justify-content: flex-start;
    justify-items: flex-start;
}
.justify-center{
    justify-content: center;
    justify-items: center;
}
.justify-end{
    justify-content: flex-end;
    justify-items: flex-end;
}
.justify-between{
    justify-content: space-between;
    justify-items: space-between;
}
.justify-around{
    justify-content: space-around;
    justify-items: space-around;
}
.justify-even{
    justify-content: space-evenly;
    justify-items: space-evenly;
}

@each $key, $value in $breakpoints{
    @media screen and ($minmax: $value){
        .align-#{$key}-start{
            align-items: flex-start !important;
            align-content: flex-start !important;
        }
        .align-#{$key}-center{
            align-items: center !important;
            align-content: center !important;
        }
        .align-#{$key}-end{
            align-items: flex-end !important;
            align-content: flex-end !important;
        }
        .align-#{$key}-between{
            align-content: space-between !important;
            align-items: space-between !important;
        }
        .align-#{$key}-around{
            align-content: space-around !important;
            align-items: space-around !important;
        }
        .align-#{$key}-even{
            align-content: space-evenly !important;
            align-items: space-evenly !important;
        }
        .justify-#{$key}-start{
            justify-content: flex-start !important;
            justify-items: flex-start !important;
        }
        .justify-#{$key}-center{
            justify-content: center !important;
            justify-items: center !important;
        }
        .justify-#{$key}-end{
            justify-content: flex-end !important;
            justify-items: flex-end !important;
        }
        .justify-#{$key}-between{
            justify-content: space-between !important;
            justify-items: space-between !important;
        }
        .justify-#{$key}-around{
            justify-content: space-around !important;
            justify-items: space-around !important;
        }
        .justify-#{$key}-even{
            justify-content: space-evenly !important;
            justify-items: space-evenly !important;
        }
    }
}

// STUB Begin Padding

// standard padding
@each $key, $value in $paddings { 
    .p-#{$key} { padding: $value; }
}
// padding top
@each $key, $value in $paddings { 
    .pt-#{$key} { padding-top: $value; }
}
// padding bottom
@each $key, $value in $paddings { 
    .pb-#{$key} { padding-bottom: $value; }
}
// padding start
@each $key, $value in $paddings { 
    .ps-#{$key} { padding-left: $value; }
}
// padding end
@each $key, $value in $paddings { 
    .pe-#{$key} { padding-right: $value; }
}
// padding x
@each $key, $value in $paddings { 
    .px-#{$key} { 
        padding-left: $value; 
        padding-right: $value; 
    }
}
// padding y
@each $key, $value in $paddings { 
    .py-#{$key} { 
        padding-top: $value; 
        padding-bottom: $value; 
    }
}
// Breakpoint Logic
@each $k1, $v1 in $breakpoints {
    @media screen and ($minmax: $v1){
        // standard margins in each @media
        @each $k2, $v2 in $paddings { 
            .p-#{$k1}-#{$k2} { padding: $v2 !important; }
        }
        // padding top
        @each $k2, $v2 in $paddings { 
            .pt-#{$k1}-#{$k2} { padding-top: $v2 !important; }
        }
        // padding bottom
        @each $k2, $v2 in $paddings { 
            .pb-#{$k1}-#{$k2} { padding-bottom: $v2 !important; }
        }
        // padding start
        @each $k2, $v2 in $paddings { 
            .ps-#{$k1}-#{$k2} { padding-left: $v2 !important; }
        }
        // padding end
        @each $k2, $v2 in $paddings { 
            .pe-#{$k1}-#{$k2} { padding-right: $v2 !important; }
        }
        // padding x
        @each $k2, $v2 in $paddings { 
            .px-#{$k1}-#{$k2} { 
                padding-left: $v2 !important; 
                padding-right: $v2 !important; 
            }
        }
        // padding y
        @each $k2, $v2 in $paddings { 
            .py-#{$k1}-#{$k2} { 
                padding-top: $v2 !important; 
                padding-bottom: $v2 !important; 
            }
        }
    }
}

// STUB Begin Margins

// standard margins
@each $key, $value in $paddings { 
    .m-#{$key} { margin: $value; }
}
// margin top
@each $key, $value in $paddings { 
    .mt-#{$key} { margin-top: $value; }
}
// margin bottom
@each $key, $value in $paddings { 
    .mb-#{$key} { margin-bottom: $value; }
}
// margin start
@each $key, $value in $paddings { 
    .ms-#{$key} { margin-left: $value; }
}
// margin end
@each $key, $value in $paddings { 
    .me-#{$key} { margin-right: $value; }
}
// margin x
@each $key, $value in $paddings { 
    .mx-#{$key} { 
        margin-left: $value; 
        margin-right: $value; 
    }
}
// margin y
@each $key, $value in $paddings { 
    .my-#{$key} { 
        margin-top: $value; 
        margin-bottom: $value; 
    }
}
// Breakpoint Logic
@each $k1, $v1 in $breakpoints {
    @media screen and ($minmax: $v1){
        // standard margins in each @media
        @each $k2, $v2 in $paddings { 
            .m-#{$k1}-#{$k2} { margin: $v2 !important; }
        }
        // margin top
        @each $k2, $v2 in $paddings { 
            .mt-#{$k1}-#{$k2} { margin-top: $v2 !important; }
        }
        // margin bottom
        @each $k2, $v2 in $paddings { 
            .mb-#{$k1}-#{$k2} { margin-bottom: $v2 !important; }
        }
        // margin start
        @each $k2, $v2 in $paddings { 
            .ms-#{$k1}-#{$k2} { margin-left: $v2 !important; }
        }
        // margin end
        @each $k2, $v2 in $paddings { 
            .me-#{$k1}-#{$k2} { margin-right: $v2 !important; }
        }
        // margin x
        @each $k2, $v2 in $paddings { 
            .mx-#{$k1}-#{$k2} { 
                margin-left: $v2 !important; 
                margin-right: $v2 !important; 
            }
        }
        // margin y
        @each $k2, $v2 in $paddings { 
            .my-#{$k1}-#{$k2} { 
                margin-top: $v2 !important; 
                margin-bottom: $v2 !important; 
            }
        }
    }
}

.d-none{ display: none; }
.d-flex{ display: flex; }
.d-block{ display: block; }

@each $key, $value in $breakpoints {
    @media screen and ($minmax: $value){
        .d-#{$key}-none{ display: none !important; }
        .d-#{$key}-flex{ display: flex !important; }
        .d-#{$key}-block{ display: block !important; }
    }
}
