@import "./_variables.scss";
@import "./_variable-maps.scss";
@import "./_units.scss";

@if $grid-as-class {
    .row {
        // STUB Gutter Styling
        @each $key, $value in $gutter-map{
            &.gx-#{$key}, &.g-#{$key} {
                width: calc(100% -  $value);
                margin-left:  $value;
                margin-right: 0;

                    &.full{
                        width: calc(100% +  $value);
                        margin-left: 0;
                        margin-right: calc($value * -1);
                    }

                column-gap: $value; 
            }

            &.gy-#{$key},&.g-#{$key}{
                row-gap: $value;
            }

            // NOTE
            // This is the logic for the col classes, combined together to save
            // space
            &.g-#{$key},&.gx-#{$key}{
                >div,article,aside,details,figcaption,figure,footer,header,main,mark,nav,section,summary,time,a{
                    width: calc(var(--width) - $value);
                }
            }
        }

    // STUB Gutter breakpoint logic

        @each $break, $screen in $breakpoint-map-ref{
            @media screen and ($minmax: $screen){
                @each $key, $value in $gutter-map{
                    &.gx-#{$break}-#{$key}, &.g-#{$break}-#{$key}{
                        column-gap: $value; 
                    }

                    &.gx-#{$break}-#{$key}:not(.full), &.g-#{$break}-#{$key}:not(.full){
                        width: calc(100% - $value);
                        margin-left: $value;
                        margin-right: 0;
                    }
    
                    &.full{
                        width: calc(100% + $value);
                        margin-left: 0;
                        margin-right: calc($value * -1);
                    }
            
                    &.gy-#{$break}-#{$key}, &.g-#{$break}-#{$key}{
                        row-gap: $value;
                    }

                    &.g-#{$break}-#{$key},&.gx-#{$break}-#{$key}{
                        >div,>article,>aside,>details,>figcaption,>figure,>footer,>header,>main,>mark,>nav,>section,>summary,>time,>a{
                            width: calc(var(--width) - $value);
                        }
                    }
                }
            }
        }
    }
}

@if $grid-as-tag {
    #{$prefix}-row {
        // STUB Gutter Styling
        @each $key, $value in $gutter-map{
            &[gx-#{$key}], &[g-#{$key}] {
                width: calc(100% - $value);
                margin-left: $value;
                margin-right: 0;
                column-gap: $value; 
                &[full]{
                    width: calc(100% + $value);
                    margin-left: 0;
                    margin-right: calc($value * -1);
                }
            }

            &[gy-#{$key}], &[g-#{$key}]{
                row-gap: $value;
            }

            // NOTE
            // This is the logic for the col classes, combined together to save
            // space
            &[g-#{$key}], &[gx-#{$key}]{
                >*{
                    width: calc(var(--width) - $value);
                }
            }
        }

    // STUB Gutter breakpoint logic

        @each $break, $screen in $breakpoint-map-ref{
            @media screen and ($minmax: $screen){
                @each $key, $value in $gutter-map{
                    &[gx-#{$break}-#{$key}], &[g-#{$break}-#{$key}]{
                        column-gap: $value; 
                    }

                    &[gx-#{$break}-#{$key}], &[g-#{$break}-#{$key}]{
                        width: calc(100% - $value);
                        margin-left: $value;
                        margin-right: 0;
                        &[full]{
                            width: calc(100% + $value);
                            margin-left: 0;
                            margin-right: calc( $value * -1);
                        }
                    }
    
            
                    &[gy-#{$break}-#{$key}], &[g-#{$break}-#{$key}]{
                        row-gap: $value;
                    }

                    &[g-#{$break}-#{$key}], &[gx-#{$break}-#{$key}]{
                        >*{
                            width: calc(var(--width) - $value);
                        }
                    }
                }
            }
        }
    }
}